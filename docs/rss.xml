<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>琶琶啙</title><link>https://zb9678.github.io</link><description>一些随手的笔记</description><copyright>琶琶啙</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/180062094?v=4</url><title>avatar</title><link>https://zb9678.github.io</link></image><lastBuildDate>Wed, 13 Nov 2024 05:48:25 +0000</lastBuildDate><managingEditor>琶琶啙</managingEditor><ttl>60</ttl><webMaster>琶琶啙</webMaster><item><title>bat vbs ahk  软件启动菜单</title><link>https://zb9678.github.io/post/bat%20vbs%20ahk%20%20-ruan-jian-qi-dong-cai-dan.html</link><description>&#13;
&lt;p align='center'&gt;&lt;img src='https://img.r08.us.kg/img/main/images/L11.13:13:27:06.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://img.r08.us.kg/img/main/images/L11.13:13:40:07.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
## choice1.vbs&#13;
&#13;
Set WshShell = CreateObject('WScript.Shell')&#13;
WshShell.Run 'choice1.bat', 0, False&#13;
&#13;
## choice1.bat&#13;
&#13;
@echo off&#13;
chcp 65001&#13;
choice1.ahk&#13;
echo ErrorLevel=%ErrorLevel%&#13;
&#13;
if '%ErrorLevel%'=='1' (&#13;
    echo 批量共享&#13;
) else if '%ErrorLevel%'=='2' (&#13;
    echo 照片去底&#13;
) else if '%ErrorLevel%'=='3' (&#13;
    echo SuperF4&#13;
) else (&#13;
    echo 未知的选择&#13;
)&#13;
pause&#13;
&#13;
## choice1.ahk&#13;
&#13;
#SingleInstance Force&#13;
#NoEnv&#13;
SetWorkingDir %A_ScriptDir%&#13;
SetBatchLines -1&#13;
&#13;
#Include %A_ScriptDir%\ControlColor.ahk&#13;
&#13;
Gui +hWndhMainWnd&#13;
Gui Font, s9, Segoe UI&#13;
Gui Color, 0xFF8000&#13;
Gui Add, Text, hWndhTxt x102 y49 w132 h71 +0x200, 选择要启动的软件&#13;
ControlColor(hTxt, hMainWnd, 0xFF8080, 0x800040)&#13;
Gui Add, Button, gplgx x29 y177 w80 h23, &amp;1 批量共享&#13;
Gui Add, Button, gqd x130 y175 w80 h23, &amp;2 照片去底&#13;
Gui Add, Button, gStopup x234 y177 w80 h23, &amp;3 SuperF4&#13;
&#13;
Gui Show, w340 h235, Window&#13;
Return&#13;
&#13;
plgx:&#13;
run C:\3\局域网共享\批量共享.exe&#13;
ExitApp 1  ; 设置返回码为 1&#13;
Return&#13;
&#13;
qd:&#13;
run C:\3\拍照试卷去底工具\照片去底色免费版.exe&#13;
ExitApp 2  ; 设置返回码为 2&#13;
Return&#13;
&#13;
Stopup:&#13;
run C:\3\SuperF4\SuperF4.exe&#13;
ExitApp 3  ; 设置返回码为 3&#13;
Return&#13;
&#13;
GuiEscape:&#13;
GuiClose:&#13;
    ExitApp&#13;
&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20vbs%20ahk%20%20-ruan-jian-qi-dong-cai-dan.html</guid><pubDate>Wed, 13 Nov 2024 05:25:52 +0000</pubDate></item><item><title>AHK 中英文输入法切换</title><link>https://zb9678.github.io/post/AHK%20-zhong-ying-wen-shu-ru-fa-qie-huan.html</link><description>&#13;
Rctrl::&#13;
loop,1&#13;
SoundBeep, 9000, 20&#13;
Send #{Space}&#13;
keywait, space&#13;
	V++&#13;
  	M := mod(V,2)  ;; 模數&#13;
  if M=1&#13;
  	SetDefaultKeyboard(0x0404)  ;; 切換為中文輸入&#13;
  else&#13;
  	SetDefaultKeyboard(0x0409)  ;; 切換為英文輸入&#13;
  return&#13;
&#13;
SetDefaultKeyboard(LocaleID) &#13;
{&#13;
  	Global SPI_SETDEFAULTINPUTLANG := 0x005A&#13;
  	SPIF_SENDWININICHANGE := 2&#13;
Lan := DllCall('LoadKeyboardLayout', 'Str', Format('{:08x}', LocaleID), 'Int', 0)&#13;
  	VarSetCapacity(Lan%LocaleID%, 4, 0)&#13;
  	NumPut(LocaleID, Lan%LocaleID%)&#13;
;Lan := 0xE0090404&#13;
  	DllCall('SystemParametersInfo', 'UInt', SPI_SETDEFAULTINPUTLANG, 'UInt', 0, 'UPtr', &amp;Lan%LocaleID%, 'UInt', SPIF_SENDWININICHANGE)&#13;
  	WinGet, windows, List&#13;
  	Loop %windows% &#13;
	{&#13;
	PostMessage 0x50, 0, %Lan%, , % 'ahk_id ' windows%A_Index%&#13;
	}&#13;
}&#13;
&#13;
&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  切换中英输入法   Rctrl  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 4-75&#13;
&#13;
# 上面是下面２种方法的合并&#13;
&#13;
Rctrl::&#13;
  V++&#13;
  M := mod(V,2)  ;; 模數&#13;
  if M=1&#13;
    SetDefaultKeyboard(0x0404)  ;; 切換為中文輸入&#13;
  else&#13;
    SetDefaultKeyboard(0x0409)  ;; 切換為英文輸入&#13;
  return&#13;
&#13;
SetDefaultKeyboard(LocaleID) {&#13;
  Global SPI_SETDEFAULTINPUTLANG := 0x005A&#13;
  SPIF_SENDWININICHANGE := 2&#13;
  Lan := DllCall('LoadKeyboardLayout', 'Str', Format('{:08x}', LocaleID), 'Int', 0)&#13;
  VarSetCapacity(Lan%LocaleID%, 4, 0)&#13;
  NumPut(LocaleID, Lan%LocaleID%)&#13;
  ;Lan := 0xE0090404&#13;
  DllCall('SystemParametersInfo', 'UInt', SPI_SETDEFAULTINPUTLANG, 'UInt', 0, 'UPtr', &amp;Lan%LocaleID%, 'UInt', SPIF_SENDWININICHANGE)&#13;
  WinGet, windows, List&#13;
  Loop %windows% {&#13;
    PostMessage 0x50, 0, %Lan%, , % 'ahk_id ' windows%A_Index%&#13;
  }&#13;
}&#13;
  return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  切换中英输入法   Rctrl  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 4-75&#13;
&#13;
Ralt::&#13;
if (A_PriorHotkey &lt;&gt; 'Ralt' or A_TimeSincePriorHotkey &gt; 400)&#13;
{&#13;
	; 两次按下时间间隔太长, 所以这不是一个两次按下.&#13;
	KeyWait, Ralt&#13;
	return&#13;
}&#13;
{&#13;
	loop,3&#13;
   	 SoundBeep, 4000, 50&#13;
}&#13;
{&#13;
	Text=全半角&#13;
	btt(Text,300,400,,'Style5')&#13;
	sleep, 600&#13;
	btt()​&#13;
	send, +{space}&#13;
	return&#13;
}&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  全半角  双击  Ralt  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 5-96&#13;
&#13;
Appskey::&#13;
	t:=-oldt+(oldt:=A_TickCount)&#13;
	if (t&lt;100 || t&gt;300)&#13;
    	Return&#13;
 	else oldt:=0&#13;
{&#13;
	loop,3&#13;
   	 SoundBeep, 3000, 30&#13;
	Text=中英标点&#13;
	btt(Text,,,,'Style6')&#13;
	sleep, 600&#13;
	btt()​&#13;
	send, ^.&#13;
	Return&#13;
}&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 中英标点  双击 Appskey    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 6-113&#13;
&#13;
&#13;
/*&#13;
Rctrl::&#13;
	loop,1&#13;
	SoundBeep, 9000, 20&#13;
	Send ^{Space}&#13;
	keywait, space&#13;
return&#13;
*/。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-zhong-ying-wen-shu-ru-fa-qie-huan.html</guid><pubDate>Mon, 11 Nov 2024 23:45:46 +0000</pubDate></item><item><title>AHK   *#n::  *号的作用</title><link>https://zb9678.github.io/post/AHK%20%20%20-%23n--%20%20--hao-de-zuo-yong.html</link><description>&lt;p align='center'&gt;&lt;img src='https://img.r08.us.kg/img/main/images/L11.09:17:05:40.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20%20%20-%23n--%20%20--hao-de-zuo-yong.html</guid><pubDate>Sat, 09 Nov 2024 09:09:55 +0000</pubDate></item><item><title>AHK 热字符串</title><link>https://zb9678.github.io/post/AHK%20-re-zi-fu-chuan.html</link><description>## ` :o:   ` &#13;
` :o:a111::ā    　结果　ā后无空格 `&#13;
o 即 omit　忽略空格不输出空格，但需空格触发 &#13;
&#13;
## :*:     &#13;
 :*:a111::ā     　结果　ā后无空格&#13;
自动触发转换，而且也不输出空格　&#13;
&#13;
==========================================&#13;
##  :?:　　可有前缀&#13;
:?:a1::ā       &#13;
sa1 空格完成替换　即a1前面可有字符。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-re-zi-fu-chuan.html</guid><pubDate>Sat, 09 Nov 2024 07:15:14 +0000</pubDate></item><item><title>winget upgrade   更新</title><link>https://zb9678.github.io/post/winget%20upgrade%20%20%20-geng-xin.html</link><description>## winget upgrade&#13;
查看需要更新的软件&#13;
&#13;
## winget upgrade 软件ID&#13;
开始更新&#13;
&#13;
## 如需中止，按 ctrl+c命令&#13;
&#13;
一定是复制软件ID&#13;
1.使用Winget安装、升级、卸载软件的常用命令&#13;
winget list    | 查看已安装的软件 |&#13;
winget search 7zip     |  搜索软件  |&#13;
winget install 7zip.zip   |  安装软件  |&#13;
winget upgrade 7zip.zip   |  升级软件  |&#13;
winget upgrade all    |  升级所有软件  |&#13;
winget uninstall 软件ID   |  卸载软件  |&#13;
&#13;
2.使用Winget安装软件时自定义安装路径&#13;
格式为：winget install 软件ID --location '自定义路径'&#13;
例子：winget install 7zip.7zip --location 'D:\Program Files\7zip'&#13;
&#13;
&#13;
![winget upgrade](https://github.com/user-attachments/assets/52a96e40-3341-4565-b193-e0e190cba5dc)&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/winget%20upgrade%20%20%20-geng-xin.html</guid><pubDate>Fri, 08 Nov 2024 10:15:42 +0000</pubDate></item><item><title>bat 命令大全</title><link>https://zb9678.github.io/post/bat%20-ming-ling-da-quan.html</link><description>&#13;
## rem 和 ::注释命令&#13;
注释行不执行操作&#13;
&#13;
## pause暂停命令&#13;
运行该命令时，将显示下面的消息：请按任意键继续 . . .&#13;
一般用于看清楚屏幕上显示的内容&#13;
&#13;
## copy&#13;
copy 1.txt + 2.txt 3.txt     #合并 1.txt 和 2.txt 的内容，保存为 3.txt 文件如果不指定 3.txt ，则保存到 1.txt&#13;
copy 1.txt +                 #复制文件到自己，实际上是修改了文件日期&#13;
&#13;
## prn&#13;
代表打印机&#13;
&#13;
## copy拷贝文件&#13;
copy c:\test.txt d:\                  #复制 c:\test.txt 文件到 d:\&#13;
copy c:\test.txt d:\test.bak     #复制 c:\test.txt 文件到 d:\ ，并重命名为 test.bak&#13;
copy c:\*.*                              #复制 c:\ 所有文件到当前目录，不包括隐藏文件和系统文件，不指定目标路径，则默认目标路径为当前目录.&#13;
copy con test.txt                   #从屏幕上等待输入，按 Ctrl+Z 结束输入，输入内容存为test.txt文件con代表屏幕。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20-ming-ling-da-quan.html</guid><pubDate>Fri, 08 Nov 2024 07:05:56 +0000</pubDate></item><item><title>AHK cmd运行剪贴板或文件</title><link>https://zb9678.github.io/post/AHK%20cmd-yun-xing-jian-tie-ban-huo-wen-jian.html</link><description>^F9   &#13;
ping  www.my69777.com&#13;
my69777.com&#13;
^F10&#13;
cmd/k 选定文字&#13;
^F11&#13;
cmd/k 选定文字  管理员身份   如   ipconfig&#13;
^F12&#13;
cmd/k 选定文件  管理员身份　如   1.bat&#13;
^+F12&#13;
cmd/k 选定文件  普通身份&#13;
&#13;
`^F9::&#13;
    clipboard := ''  ; 清空剪贴板&#13;
    Send, ^c  ; 复制选中的文本到剪贴板&#13;
    ClipWait  ; 等待剪贴板中有数据&#13;
    urls := clipboard  ; 将剪贴板内容存储到变量中&#13;
&#13;
    ; 创建一个临时批处理文件&#13;
    FileDelete, ping_commands.bat  ; 删除旧的文件（如果存在）&#13;
    FileAppend, @echo off`n, ping_commands.bat  ; 创建新的批处理文件并添加开头&#13;
&#13;
    Loop, parse, urls, `n  ; 遍历每一行（网址）&#13;
    {&#13;
        FileAppend, ping %A_LoopField%`n, ping_commands.bat  ; 将每个 ping 命令写入批处理文件&#13;
    }&#13;
&#13;
    Run, cmd.exe /k ping_commands.bat  ; 在一个窗口中运行批处理文件&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F9  ping选定多个网址  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-516&#13;
&#13;
^F10::&#13;
    clipboard = &#13;
    send, ^c&#13;
    clipboard = %clipboard%&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ClipWait  ; 等待剪贴板中有数据&#13;
Run, %A_ComSpec% /k %clipboard%&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F10  cmd/k 选定文字   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-516&#13;
&#13;
^F11::&#13;
    clipboard = &#13;
    send, ^c&#13;
    clipboard = %clipboard%&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ClipWait  ; 等待剪贴板中有数据&#13;
Run, %A_ComSpec% /k %clipboard%, , RunAs&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ ^F11  cmd/k 选定文字 以管理员运行   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-516&#13;
&#13;
^F12::&#13;
    Send, &gt;^x&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ; 获取剪贴板内容（假设剪贴板中存储的是批处理文件的路径）&#13;
    ClipWait  ; 等待剪贴板内容&#13;
    batchFilePath := Clipboard  ; 将剪贴板内容赋值给变量&#13;
&#13;
    ; 确保路径是有效的&#13;
    if FileExist(batchFilePath) {&#13;
        ; 使用 RunAs 命令以管理员身份运行批处理文件&#13;
        Run, % 'cmd.exe /c ''' batchFilePath '''', , RunAs&#13;
    } else {&#13;
        MsgBox, 批处理文件不存在: %batchFilePath%&#13;
    }&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F12  cmd/c 选定文件 管理员运行    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-517&#13;
&#13;
^+F12::&#13;
    Send, &gt;^x      ; 获取批处理文件的路径快捷键&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ; 获取剪贴板内容（假设剪贴板中存储的是批处理文件的路径）&#13;
    ClipWait  ; 等待剪贴板内容&#13;
    batchFilePath := Clipboard  ; 将剪贴板内容赋值给变量&#13;
&#13;
    ; 确保路径是有效的&#13;
    if FileExist(batchFilePath) {&#13;
        ; 非管理员身份　运行批处理文件&#13;
        Run, % 'cmd.exe /c ''' batchFilePath ''''&#13;
    } else {&#13;
        MsgBox, 批处理文件不存在: %batchFilePath%&#13;
    }&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F12  cmd/c 选定文件 管理员运行    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-517`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20cmd-yun-xing-jian-tie-ban-huo-wen-jian.html</guid><pubDate>Fri, 08 Nov 2024 06:31:28 +0000</pubDate></item><item><title>ahk 选中 删除空行</title><link>https://zb9678.github.io/post/ahk%20-xuan-zhong-%20-shan-chu-kong-xing.html</link><description>`F6 &amp; 2::&#13;
SetWorkingDir, %A_ScriptDir%  ; 设置工作目录&#13;
&#13;
; 复制内容到剪贴板&#13;
Send, ^c&#13;
ClipWait, 2&#13;
sleep, 200&#13;
if ErrorLevel&#13;
{&#13;
    MsgBox, 复制失败或超时&#13;
    return&#13;
}&#13;
&#13;
; 处理剪贴板内容&#13;
text := Clipboard&#13;
text := StrReplace(text, '`r')  ; 移除所有回车符&#13;
&#13;
; 使用数组存储非空行&#13;
lines := StrSplit(text, '`n')&#13;
output := ''&#13;
&#13;
for index, line in lines&#13;
{&#13;
    if (line != '') {  ; 忽略空行&#13;
        output .= line . '`n'&#13;
    }&#13;
}&#13;
&#13;
; 移除最后一个换行符&#13;
output := RTrim(output, '`n')&#13;
&#13;
; 将结果写回剪贴板&#13;
Clipboard := output&#13;
Send, ^v&#13;
&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ F6 &amp; 2  选中 删除空行   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 13-2706`。</description><guid isPermaLink="true">https://zb9678.github.io/post/ahk%20-xuan-zhong-%20-shan-chu-kong-xing.html</guid><pubDate>Thu, 07 Nov 2024 11:54:29 +0000</pubDate></item><item><title>bat wifi</title><link>https://zb9678.github.io/post/bat%20wifi.html</link><description>`@echo off&#13;
&#13;
chcp 437 &gt;nul&#13;
&#13;
for /f 'tokens=1* delims=:' %%i in ('netsh wlan show profiles ^| findstr /c:'All User Profile'') do (&#13;
&#13;
    call :GetPass %%j&#13;
&#13;
)&#13;
&#13;
pause&#13;
&#13;
goto :eof&#13;
&#13;
:GetPass&#13;
&#13;
echo WiFi : %*&#13;
&#13;
for /f 'delims=' %%a in ('netsh wlan show profile name^='%*' key^=clear ^| findstr /c:'Key Content'') do (&#13;
&#13;
    echo %%a&#13;
&#13;
) &gt;  D:\$RECYCLE&#13;
goto :eof  &#13;
`。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20wifi.html</guid><pubDate>Thu, 07 Nov 2024 11:38:26 +0000</pubDate></item><item><title>bat 换成Win10资源管理器 管理员运行</title><link>https://zb9678.github.io/post/bat%20-huan-cheng-Win10-zi-yuan-guan-li-qi-%20-guan-li-yuan-yun-xing.html</link><description>`@echo off&#13;
setlocal enabledelayedexpansion&#13;
&#13;
echo 请选择文件资源管理器样式:&#13;
echo 1. Windows 10 文件资源管理器&#13;
echo 2. Windows 11 文件资源管理器&#13;
set /p choice='输入选项 (1或2): '&#13;
&#13;
if '%choice%'=='1' (&#13;
    echo 正在应用 Windows 10 文件资源管理器样式...&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}' /v '' /t REG_SZ /d 'CLSID_ItemsViewAdapter' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}\InProcServer32' /v '' /t REG_SZ /d 'C:\Windows\System32\Windows.UI.FileExplorer.dll_' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}\InProcServer32' /v 'ThreadingModel' /t REG_SZ /d 'Apartment' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}' /v '' /t REG_SZ /d 'File Explorer Xaml Island View Adapter' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}\InProcServer32' /v '' /t REG_SZ /d 'C:\Windows\System32\Windows.UI.FileExplorer.dll_' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}\InProcServer32' /v 'ThreadingModel' /t REG_SZ /d 'Apartment' /f&#13;
    echo Windows 10 文件资源管理器样式已应用.&#13;
) else if '%choice%'=='2' (&#13;
    echo 正在应用 Windows 11 文件资源管理器样式...&#13;
    reg delete 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}' /f&#13;
    reg delete 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}' /f&#13;
    echo Windows 11 文件资源管理器样式已复原.&#13;
) else (&#13;
    echo 无效的选项，请选择 1 或 2.&#13;
    exit /b&#13;
)&#13;
&#13;
set /p restart='是否重启资源管理器以使更改生效？(y/n): '&#13;
if /i '%restart%'=='y' (&#13;
    echo 正在重启资源管理器...&#13;
    taskkill /f /im explorer.exe&#13;
    start explorer.exe&#13;
    echo 资源管理器已重启.&#13;
) else (&#13;
    echo 请手动重启资源管理器以使更改生效.&#13;
)&#13;
&#13;
endlocal&#13;
pause&#13;
`。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20-huan-cheng-Win10-zi-yuan-guan-li-qi-%20-guan-li-yuan-yun-xing.html</guid><pubDate>Thu, 07 Nov 2024 11:34:51 +0000</pubDate></item><item><title>bat  选择一个选项 (1-4)</title><link>https://zb9678.github.io/post/bat%20%20-xuan-ze-yi-ge-xuan-xiang-%20%281-4%29.html</link><description>`@echo off&#13;
:menu&#13;
cls&#13;
echo ===========================================&#13;
echo        Recall 功能管理脚本&#13;
echo ===========================================&#13;
echo.&#13;
echo 1. 查看 Recall 功能状态&#13;
echo 2. 禁用 Recall 功能&#13;
echo 3. 启用 Recall 功能&#13;
echo 4. 退出&#13;
echo.&#13;
set /p choice='请选择一个选项 (1-4): '&#13;
:menu&#13;
cls&#13;
echo ===========================================&#13;
echo        Recall 功能管理脚本&#13;
echo ===========================================&#13;
echo.&#13;
echo 1. 查看 Recall 功能状态&#13;
echo 2. 禁用 Recall 功能&#13;
echo 3. 启用 Recall 功能&#13;
echo 4. 退出&#13;
echo.&#13;
set /p choice='请选择一个选项 (1-4): '&#13;
&#13;
if '%choice%'=='1' goto check&#13;
if '%choice%'=='2' goto disable&#13;
if '%choice%'=='3' goto enable&#13;
if '%choice%'=='4' goto exit&#13;
&#13;
echo 无效的选择。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20%20-xuan-ze-yi-ge-xuan-xiang-%20%281-4%29.html</guid><pubDate>Thu, 07 Nov 2024 11:32:53 +0000</pubDate></item><item><title>AHK 开头Umi-OCR</title><link>https://zb9678.github.io/post/AHK%20-kai-tou-Umi-OCR.html</link><description>`#SingleInstance force&#13;
isRunning := false                                                ;---- 用于跟踪脚本是否在运行&#13;
timerRunning := false                                          ;-- 用于跟踪定时器是否在运行&#13;
&#13;
F5 &amp; b::                                             &#13;
    	Process, Exist, Umi-OCR.exe                   ; --------检查程序是否在运行&#13;
    	if (ErrorLevel) &#13;
{&#13;
        	Process, Close, Umi-OCR.exe                 ;---- 如果程序在运行则关闭它&#13;
        	isRunning := false                                  ;----------- 更新状态为未运行&#13;
        	SetTimer, AutoCloseUmi-OCR, Off        ;------------------ 关闭定时器&#13;
        	timerRunning := false                            ;------------- 更新定时器状态&#13;
}&#13;
else &#13;
{&#13;
        	Run, 'D:\ahk1.0\Lib\0 tool\Umi-OCR_Rapid_dev_20231025\Umi-OCR.exe'&#13;
        	Sleep, 1700&#13;
        	Send, +^!z                                             ;-------------截图快捷键 +^!z  &#13;
       	isRunning := true                                   ;--------  更新状态为正在运行&#13;
&#13;
        	if (!timerRunning)                                   ;----------- 如果定时器未运行&#13;
       {                                          &#13;
            	SetTimer, AutoCloseUmi-OCR, -11000  ; --------------------------设置一个11秒的单次定时器&#13;
            	timerRunning := true                             ;---- 更新定时器状态为运行中&#13;
       }&#13;
}&#13;
return&#13;
;----------------------------------------------------------------------------定时器&#13;
AutoCloseUmi-OCR:&#13;
    	Process, Close, Umi-OCR.exe                ;------------自动关闭截图软件&#13;
    	isRunning := false                                  ;----------- 更新状态为未运行&#13;
    	timerRunning := false                            ;---- 更新定时器状态为未运行&#13;
	return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  F5 &amp; b  Umi-OCR.exe  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 005`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-kai-tou-Umi-OCR.html</guid><pubDate>Sun, 03 Nov 2024 05:52:23 +0000</pubDate></item><item><title>AHK 777</title><link>https://zb9678.github.io/post/AHK%20777.html</link><description>`&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ&#13;
	; 指定 SoundVolumeView 的路径&#13;
global SoundVolumeViewPath, devices, currentIndex, command&#13;
SoundVolumeViewPath := 'D:\ahk1.0\Lib\soundvolumeview-x64\SoundVolumeView.exe'&#13;
	; 定义设备名称（确保这些设备名称与 SoundVolumeView 中显示的名称完全匹配）&#13;
	devices := ['耳机', '扬声器', '手机']&#13;
	currentIndex := 0  ; 当前设备的索引&#13;
appskey &amp; F1::&#13;
currentIndex := (currentIndex + 1) &gt; devices.MaxIndex() ? 1 : currentIndex + 1  ; 循环切换  &#13;
    	; 拼接命令&#13;
command := SoundVolumeViewPath . ' /SetDefault ''' . devices[currentIndex] . ''' ''Render'''&#13;
    &#13;
    	; 调试：显示生成的命令，检查是否正确&#13;
{&#13;
    	loop, 1&#13;
        	SoundBeep, 400, 10&#13;
; 400 声音频率, 可以为表达式. 它是介于 37-32767 之间的数字. 省略则频率为523&#13;
; -------------------10 声音的持续时间, 单位为毫秒. 如果省略, 则持续时间为 150      &#13;
        	; 显示当前设备名称&#13;
        	Text := '⭕    ' . devices[currentIndex] . '   ⭕'&#13;
        	btt(Text, 600, 10, ,'Style7')&#13;
        	sleep, 500&#13;
        	btt()&#13;
}    &#13;
    	Run, %command%                              ; ----------------------执行命令&#13;
    	return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ     切换音频设备     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 1-28&#13;
&#13;
OnClipboardChange:&#13;
{&#13;
	SoundBeep, 10000, 1	&#13;
	btt(Clipboard,,,,'Style8')&#13;
	sleep, 700&#13;
	btt()​&#13;
;FileAppend, %clipboard% `n, c:\6           ;----------------  剪贴板历史记录保存&#13;
	return&#13;
}&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ     复制后通知     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 02-68&#13;
&#13;
&#13;
&#13;
~LButton &amp; RButton::&#13;
	cos_mousedrag_treshold := 2 ; pixels&#13;
MouseGetPos, cos_mousedrag_x, cos_mousedrag_y&#13;
	win1 := WinActive('A')&#13;
	KeyWait RButton&#13;
MouseGetPos, cos_mousedrag_x2, cos_mousedrag_y2&#13;
	win2 := WinActive('A')&#13;
	WinGetClass cos_class, A&#13;
if(((abs(cos_mousedrag_x2 - cos_mousedrag_x) &gt; cos_mousedrag_treshold&#13;
  or abs(cos_mousedrag_y2 - cos_mousedrag_y) &gt; cos_mousedrag_treshold)) and win1 = win2&#13;
and cos_class != 'ConsoleWindowClass')&#13;
	KeyWait, RButton , T1.1&#13;
	If ErrorLevel = 0&#13;
{&#13;
	SendInput {Ctrl Down}c{Ctrl Up}&#13;
	ClipWait, , 1   &#13;
; 等待，一直到剪贴板包含数据。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20777.html</guid><pubDate>Sun, 03 Nov 2024 05:08:22 +0000</pubDate></item><item><title>AHK ahk1.11 -2</title><link>https://zb9678.github.io/post/AHK%20ahk1.11%20-2.html</link><description>`&#13;
;🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁  颜色  处理  🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁&#13;
;👔👔👔👔👔👔👔👔👔👔👔  段落  处理  👔👔👔👔👔👔👔👔👔👔👔&#13;
&#13;
#F2::&#13;
if (onoff := !onoff)&#13;
	{&#13;
	Send {home}&#13;
	}&#13;
else&#13;
	{&#13;
    	Send {end}&#13;
keywait, F2&#13;
}&#13;
 Return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ   #F2 行首 行尾    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 09-2625&#13;
&#13;
#F3::&#13;
if (onoff := !onoff)&#13;
	{&#13;
	Send #!{home}&#13;
	}&#13;
else&#13;
	{&#13;
    	Send #!{end}&#13;
keywait, F3&#13;
}&#13;
 Return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  #F3 段首 段尾     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 10 -2638&#13;
&#13;
#F4::&#13;
if (onoff := !onoff)&#13;
	{&#13;
send, ^a{left}&#13;
	}&#13;
else&#13;
	{&#13;
send, ^a{right}&#13;
	keywait, F4&#13;
	}&#13;
 Return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ   #F4 页首 页尾    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 11-2651&#13;
&#13;
&#13;
;👔👔👔👔👔👔👔👔👔👔👔  段落  处理  👔👔👔👔👔👔👔👔👔👔👔&#13;
;🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀  空行  处理  🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀&#13;
&#13;
F6 &amp; 1::&#13;
    Clipboard := ''&#13;
    Send, ^c&#13;
    ClipWait, 2&#13;
    Clipboard := RegExReplace(Clipboard, '(\R\s*){2,}', '`r`n`r`n')&#13;
    Send, ^v&#13;
return&#13;
; 当我们使用 '`r`n' 时，它只会将光标移动到下一行的开始，但不会创建一个空行。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20ahk1.11%20-2.html</guid><pubDate>Sun, 03 Nov 2024 05:07:01 +0000</pubDate></item><item><title>AHK ahk1.11  -1</title><link>https://zb9678.github.io/post/AHK%20ahk1.11%20%20-1.html</link><description>`&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ&#13;
&#13;
#Requires AutoHotkey v1.1.36                             ; -----------------------------------V1版本&#13;
Menu, Tray, Icon, D:\ahk1.0\Lib\0\Library.ico       ;--------------------------------- 脚本图标&#13;
Menu , tray , tip , Ahk1.1                                       ;---------------------------- 鼠标悬浮提示&#13;
#NoEnv                                                                 ;--------------------------------- 改善性能&#13;
#SingleInstance Force        　                               ;------只允许单个该脚本运行,脚本强制替换&#13;
SendMode Input             ;-------Send,SendRaw,Click,MouseMove/Click/Drag到SendInput&#13;
#WinActivateForce                                               ;-------------------- 用强制的方法激活窗口&#13;
#Persistent                      ;----------- 使非热键类的脚本持久运行 直到用户关闭或遇到 ExitApp&#13;
#ClipboardTimeout -1                         ;首次访问剪贴板失败后脚本继续访问剪贴板的持续时间&#13;
                                        ; -1 表示持续访问剪贴板. 0 只访问1次. 无 使用 1000 ms 的超时时间&#13;
SetWorkingDir, %A_ScriptDir%                            ;----------- 脚本所在的文件夹作为工作目录&#13;
SetTitleMatchMode fast&#13;
SetBatchLines, -1                                               ; 脚本快速执行,减少 CPU 占用,  使用10ms -1&#13;
Process,priority, , high                                         ;------------------------脚本进程优先级为高&#13;
;#HotkeyModifierTimeout 0  ;影响热键修饰符的行为：^!#+。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20ahk1.11%20%20-1.html</guid><pubDate>Sun, 03 Nov 2024 05:06:09 +0000</pubDate></item><item><title>AHK "耳机", "扬声器", "手机"</title><link>https://zb9678.github.io/post/AHK%20--er-ji--%2C%20--yang-sheng-qi--%2C%20--shou-ji--.html</link><description>`	; 指定 SoundVolumeView 的路径&#13;
global SoundVolumeViewPath, devices, currentIndex, command&#13;
SoundVolumeViewPath := 'D:\ahk1.0\Lib\soundvolumeview-x64\SoundVolumeView.exe'&#13;
	; 定义设备名称（确保这些设备名称与 SoundVolumeView 中显示的名称完全匹配）&#13;
	devices := ['耳机', '扬声器', '手机']&#13;
	currentIndex := 0  ; 当前设备的索引&#13;
appskey &amp; F1::&#13;
currentIndex := (currentIndex + 1) &gt; devices.MaxIndex() ? 1 : currentIndex + 1  ; 循环切换  &#13;
    	; 拼接命令&#13;
command := SoundVolumeViewPath . ' /SetDefault ''' . devices[currentIndex] . ''' ''Render'''&#13;
    &#13;
    	; 调试：显示生成的命令，检查是否正确&#13;
{&#13;
    	loop, 1&#13;
        	SoundBeep, 400, 10&#13;
; 400 声音频率, 可以为表达式. 它是介于 37-32767 之间的数字. 省略则频率为523&#13;
; -------------------10 声音的持续时间, 单位为毫秒. 如果省略, 则持续时间为 150      &#13;
        	; 显示当前设备名称&#13;
        	Text := '⭕    ' . devices[currentIndex] . '   ⭕'&#13;
        	btt(Text, 600, 10, ,'Style7')&#13;
        	sleep, 500&#13;
        	btt()&#13;
}    &#13;
    	Run, %command%                              ; ----------------------执行命令&#13;
    	return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ     切换音频设备     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 1`&#13;
&#13;
# sound_volume_view　下载地址&#13;
https://www.nirsoft.net/utils/sound_volume_view.html&#13;
# realtek 下载地址&#13;
https://www.realtek.com/Download/Overview?menu_id=355。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20--er-ji--%2C%20--yang-sheng-qi--%2C%20--shou-ji--.html</guid><pubDate>Sun, 03 Nov 2024 04:00:40 +0000</pubDate></item><item><title>AHK 单键启动关闭 ahk</title><link>https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-%20ahk.html</link><description>`#SingleInstance force                                          ;----------- 强制加载新的脚本&#13;
isRunning := false                  ; 状态变量: isRunning 用于跟踪脚本是否正在运行&#13;
&#13;
$^esc::                  ; $+esc::&#13;
    	if (isRunning) &#13;
	{&#13;
      					 ; 1.如果脚本已经在运行，则关闭它&#13;
        	Name := 'SnoMouse.ahk'                     ;------ 指定要退出的脚本名称&#13;
        	DetectHiddenWindows, On                   ;------ 启用对隐藏窗口的检测&#13;
       	SetTitleMatchMode, 2 ; 设置标题匹配模式&#13;
&#13;
       	WinClose, %Name% ahk_class AutoHotkey&#13;
        isRunning := false 			                        ;-----------更新状态为未运行&#13;
    	} &#13;
&#13;
      else {&#13;
       					 ; 2.如果脚本没有在运行，则启动它&#13;
        	Run D:\ahk1.0\Lib\SnoMouse.ahk&#13;
        isRunning := true                                         ;---------更新状态为正在运行&#13;
   	 }&#13;
return`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-%20ahk.html</guid><pubDate>Sun, 03 Nov 2024 03:55:43 +0000</pubDate></item><item><title>AHK 单键启动关闭程序</title><link>https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-cheng-xu.html</link><description>`#SingleInstance force                                                          ; 强制加载新的脚本&#13;
isRunning := false                  ; 状态变量: isRunning 用于跟踪脚本是否正在运行&#13;
Rctrl &amp; 5::&#13;
    Process, Exist, v2rayN.exe                                      ; 检查程序是否已经在运行&#13;
    if (ErrorLevel)                 ;根据 ErrorLevel 的值来决定是关闭程序还是启动程序&#13;
    {&#13;
                                                                            ; 如果程序正在运行，则关闭它&#13;
        Process, Close, v2rayN.exe&#13;
        isRunning := false                                                        ; 更新状态为未运行&#13;
    } &#13;
    else &#13;
    {&#13;
                                                                        ; 如果程序没有在运行，则启动它&#13;
        Run, C:\3\v2rayN-With-Core\v2rayN.exe , , min &#13;
        isRunning := true                                                     ; 更新状态为正在运行&#13;
    }&#13;
return&#13;
&#13;
;Rctrl &amp; 5::&#13;
if (u := !u)&#13;
	{&#13;
	Process,close,v2rayN.exe&#13;
	}&#13;
else&#13;
	{&#13;
    	Run, C:\3\v2rayN-With-Core\v2rayN.exe , , min &#13;
keywait, 5&#13;
}&#13;
Return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ    Rctrl &amp; 5 打开 v2rayN   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 00007`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-cheng-xu.html</guid><pubDate>Sun, 03 Nov 2024 03:52:54 +0000</pubDate></item><item><title>AHK 确认对话框</title><link>https://zb9678.github.io/post/AHK%20-que-ren-dui-hua-kuang.html</link><description>`DetectHiddenWindows, On                                 ;------ 启用对隐藏窗口的检测&#13;
SetTitleMatchMode, 2                                           ;----------- 设置标题匹配模式&#13;
&#13;
F9 &amp; [::&#13;
	Run, 'D:\ahk1.0\Lib\SnoMouse.ahk'&#13;
     Loop&#13;
{&#13;
	Sleep, 120000 ; 等待120秒&#13;
                                                                             ;----------------------------- 显示确认对话框&#13;
	MsgBox, 4,, 关闭 SnoMouse.ahk 请点是&#13;
    IfMsgBox, Yes&#13;
	{&#13;
       	WinClose, SnoMouse.ahk ahk_class AutoHotkey&#13;
	}&#13;
	break ; 退出循环                                      ;-- 如果选择“否”，则继续循环&#13;
}&#13;
	return&#13;
;-----------------------------------------------------------------------------------&#13;
F9 &amp; ]::&#13;
       	WinClose, SnoMouse.ahk ahk_class AutoHotkey&#13;
return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  F1 &amp; [ 启动 F1 &amp; ] 退出 SnoMouse  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 00009`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-que-ren-dui-hua-kuang.html</guid><pubDate>Sun, 03 Nov 2024 03:50:58 +0000</pubDate></item><item><title>Vscode 自动保存设置</title><link>https://zb9678.github.io/post/Vscode%20-zi-dong-bao-cun-she-zhi.html</link><description>&lt;p align='center'&gt;&lt;img src='https://img.r08.us.kg/img/main/images/20241101233120.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/Vscode%20-zi-dong-bao-cun-she-zhi.html</guid><pubDate>Fri, 01 Nov 2024 15:32:03 +0000</pubDate></item><item><title>Vscode 资源管理器上图标　插件</title><link>https://zb9678.github.io/post/Vscode%20-zi-yuan-guan-li-qi-shang-tu-biao-%E3%80%80-cha-jian.html</link><description>&lt;p align='center'&gt;&lt;img src='https://img.r08.us.kg/img/main/images/L11.01:23:17:29.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/Vscode%20-zi-yuan-guan-li-qi-shang-tu-biao-%E3%80%80-cha-jian.html</guid><pubDate>Fri, 01 Nov 2024 15:18:34 +0000</pubDate></item><item><title>Vscode 界面字体大小设置</title><link>https://zb9678.github.io/post/Vscode%20-jie-mian-zi-ti-da-xiao-she-zhi.html</link><description>&lt;p align='center'&gt;&lt;img src='https://img.r08.us.kg/img/main/images/L11.01:23:06:46.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/Vscode%20-jie-mian-zi-ti-da-xiao-she-zhi.html</guid><pubDate>Fri, 01 Nov 2024 15:07:14 +0000</pubDate></item><item><title>html  body与head</title><link>https://zb9678.github.io/post/html%20%20body-yu-head.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://img.r08.us.kg/img/main/images/20241101223551.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20%20body-yu-head.html</guid><pubDate>Fri, 01 Nov 2024 14:36:46 +0000</pubDate></item><item><title>html  marquee</title><link>https://zb9678.github.io/post/html%20%20marquee.html</link><description>`&lt;marquee&gt;该文本将从右向左滚动&lt;/marquee&gt;`&#13;
-----------------------------------------------------------------------&#13;
`&lt;marquee direction='up'&gt;该文本将从下往上滚动&lt;/marquee&gt;`&#13;
-----------------------------------------------------------------------&#13;
`&lt;marquee&#13;
  direction='down'&#13;
  width='250'&#13;
  height='200'&#13;
  behavior='alternate'&#13;
  style='border:solid'&gt;&#13;
  &lt;marquee behavior='alternate'&gt;该文本将弹跳&lt;/marquee&gt;`&#13;
-----------------------------------------------------------------------&#13;
    `&lt;marquee loop='100' bgcolor='red'&gt;&#13;
        文字能跑了。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20%20marquee.html</guid><pubDate>Wed, 30 Oct 2024 15:01:08 +0000</pubDate></item><item><title>html  input 输入标签</title><link>https://zb9678.github.io/post/html%20%20input%20-shu-ru-biao-qian.html</link><description># &lt;input&gt;   单标签（只有小数几个），大多还是起始标签&#13;
&#13;
&#13;
&lt;p align = 'center'&gt;&lt;img src='https://zcr07.github.io/picx-images-hosting/1/image.6t74ii2zcy.jpg' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
# 输入密码的标签&#13;
&#13;
&lt;p align = 'center'&gt;&lt;img src='https://picx.w07.us.kg/1/image.7sn7voa2zp.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
# 禁用标签&#13;
&#13;
&lt;p align = 'center'&gt;&lt;img src='https://picx.w07.us.kg/1/image.pfcg25eiw.jpg' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20%20input%20-shu-ru-biao-qian.html</guid><pubDate>Wed, 30 Oct 2024 14:45:56 +0000</pubDate></item><item><title>html 背景色等，图片到右边</title><link>https://zb9678.github.io/post/html%20-bei-jing-se-deng-%EF%BC%8C-tu-pian-dao-you-bian.html</link><description># 8&#13;
&lt;p align - 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.9dcytiwkpe.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
# 2&#13;
&lt;img src='https://assets.vviptuangou.com//uploads/touch/20241030/b01e97d5f105a4836c978176e43bcf49.png' alt='image.png' /&gt;&#13;
&#13;
# a&#13;
&lt;p align = 'center'&gt;&lt;img src='https://assets.vviptuangou.com//uploads/touch/20241030/b01e97d5f105a4836c978176e43bcf49.png' style='width:600px; height:400px;'&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20-bei-jing-se-deng-%EF%BC%8C-tu-pian-dao-you-bian.html</guid><pubDate>Tue, 29 Oct 2024 12:25:24 +0000</pubDate></item><item><title>html 首字变大</title><link>https://zb9678.github.io/post/html%20-shou-zi-bian-da.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.2a53dw946q.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20-shou-zi-bian-da.html</guid><pubDate>Tue, 29 Oct 2024 12:10:47 +0000</pubDate></item><item><title>html 文字绕图 图片部分</title><link>https://zb9678.github.io/post/html%20-wen-zi-rao-tu-%20-tu-pian-bu-fen.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.m2udjv5n.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
# 将图片设置为浮动，文字就包住图片了&#13;
&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.1lbttupvbp.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
# 图片与文字间距&#13;
&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.2a53dvmdro.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20-wen-zi-rao-tu-%20-tu-pian-bu-fen.html</guid><pubDate>Tue, 29 Oct 2024 11:39:46 +0000</pubDate></item><item><title>html 图片位置</title><link>https://zb9678.github.io/post/html%20-tu-pian-wei-zhi.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/2024-10-29_190344.2obj4pcmth.jpg' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20-tu-pian-wei-zhi.html</guid><pubDate>Tue, 29 Oct 2024 11:08:58 +0000</pubDate></item><item><title>FastStone Capture 边缘撕裂去白边</title><link>https://zb9678.github.io/post/FastStone%20Capture%20-bian-yuan-si-lie-qu-bai-bian.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.73ty9y72js.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/FastStone%20Capture%20-bian-yuan-si-lie-qu-bai-bian.html</guid><pubDate>Tue, 29 Oct 2024 10:57:28 +0000</pubDate></item><item><title>Html 生成虚拟文字的方法</title><link>https://zb9678.github.io/post/Html%20-sheng-cheng-xu-ni-wen-zi-de-fang-fa.html</link><description># Lorem26&#13;
- 生成26个单词。</description><guid isPermaLink="true">https://zb9678.github.io/post/Html%20-sheng-cheng-xu-ni-wen-zi-de-fang-fa.html</guid><pubDate>Tue, 29 Oct 2024 10:02:32 +0000</pubDate></item><item><title>正则表达式</title><link>https://zb9678.github.io/post/zheng-ze-biao-da-shi.html</link><description>  &lt;h2 id='section3'&gt;匹配以abc为开头,并且最后一个字母不为数字的字符串:&lt;/h2&gt;&#13;
    &lt;p&gt;&#13;
        &lt;span style='font-family:KaiTi; font-size:24px; color: #00e500'&gt;abc[^0-9]&lt;/span&gt;&lt;br&gt;&#13;
        匹配结果&lt;br&gt;&#13;
        abcd&lt;br&gt;&#13;
        \d  数字字符，等价于[0-9] &lt;br&gt;&#13;
        \D  非数字字符，等价于[^0-9] &lt;br&gt;&#13;
        &lt;span style='font-family:KaiTi; font-size:24px; color: #00e500'&gt;abc(\D)*&lt;/span&gt; &lt;br&gt;&#13;
        &lt;span class='highlight'&gt;abcf&lt;/span&gt;11we &lt;br&gt;&#13;
        &lt;span style='color: #ff461f; font-size:18px'&gt;abcerewsdfsggddd&lt;/span&gt;2xss &lt;br&gt;&#13;
        匹配到数字11和2时，匹配终止 &lt;br&gt;        &#13;
    &lt;/p&gt;&#13;
  &#13;
&#13;
      &lt;h2 id='section4'&gt;匹配一组字符&lt;/h2&gt;&#13;
    &lt;p&gt;&#13;
        [ ] 定义一个字符集合&lt;br&gt;&#13;
        0-9、a-z 定义了一个字符区间，区间使用 ASCI 码来确定，字符区间在 [ ] 中使用。</description><guid isPermaLink="true">https://zb9678.github.io/post/zheng-ze-biao-da-shi.html</guid><pubDate>Sun, 27 Oct 2024 13:15:53 +0000</pubDate></item><item><title>cron</title><link>https://zb9678.github.io/post/cron.html</link><description>＃　六段式&#13;
&#13;
cron = *  *  *  *  *  *&#13;
         {秒} {分} {时} {日期} {月} {星期} &#13;
           0      0    12       ?     *    WED         在每星期三下午12:00:00 执行&#13;
注意：&#13;
如果我们指定每月2号执行操作，那么每月2号是星期几是不确定的，因此星期字段不能为 * ，* 表示所有的值，所以要用 ？  &#13;
问号的形式可不适用于五段式。</description><guid isPermaLink="true">https://zb9678.github.io/post/cron.html</guid><pubDate>Sat, 26 Oct 2024 01:15:59 +0000</pubDate></item><item><title>构建的过程</title><link>https://zb9678.github.io/post/gou-jian-de-guo-cheng.html</link><description>https://github.com/Meekdai/Gmeek?tab=readme-ov-file&#13;
安装【创建仓库】点击[通过模板创建仓库](https://github.com/new?template_name=Gmeek-template&amp;template_owner=Meekdai)&#13;
&#13;
写文章&#13;
issues　　　右侧 `Labels` 选 `documentation`   (这个很重要)。</description><guid isPermaLink="true">https://zb9678.github.io/post/gou-jian-de-guo-cheng.html</guid><pubDate>Fri, 25 Oct 2024 10:39:46 +0000</pubDate></item></channel></rss>