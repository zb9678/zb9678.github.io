<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>琶琶啙</title><link>https://zb9678.github.io</link><description>一些随手的笔记</description><copyright>琶琶啙</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/180062094?v=4</url><title>avatar</title><link>https://zb9678.github.io</link></image><lastBuildDate>Mon, 02 Dec 2024 00:19:35 +0000</lastBuildDate><managingEditor>琶琶啙</managingEditor><ttl>60</ttl><webMaster>琶琶啙</webMaster><item><title>KeePassPassword</title><link>https://zb9678.github.io/post/KeePassPassword.html</link><description>## 打开系统属性/高级/环境变量/系统变量&#13;
&#13;
- 运行 control.exe sysdm.cpl&#13;
&#13;
## 新建系统变量 KeePassPassword&#13;
&#13;
![image](https://github.com/user-attachments/assets/8a9f592a-9170-41b6-8084-9d2f64546abe)&#13;
&#13;
## AHK脚本&#13;
&#13;
```&#13;
; 定义全局标志变量&#13;
Global ClipboardLock := false&#13;
&#13;
Rctrl &amp; s::&#13;
    ClipboardLock := true  ; 设置标志为 true，锁定剪贴板监控&#13;
    clipboard := 'o0o0o0'  ; 修改剪贴板内容以迷惑监控程序&#13;
    &#13;
    ; 启动目标程序&#13;
    Run, 'D:\ahk1.0\Lib\0 tool\9KeePass-2.52\KeePass.exe'&#13;
    Sleep, 100&#13;
    &#13;
    ; 等待释放按键&#13;
    KeyWait, s , D&#13;
    &#13;
    ; 获取密码（假设从环境变量中获取）&#13;
    EnvGet, password, KeePassPassword&#13;
    &#13;
    ; 直接发送密码而不使用剪贴板&#13;
    SendInput, %password%{Enter}&#13;
return&#13;
```&#13;
&#13;
## 说明&#13;
&#13;
迷惑剪贴板监控程序：&#13;
在脚本中设置 clipboard := 'o0o0o0' 是为了迷惑监控程序&#13;
&#13;
避免剪贴板暴露密码：&#13;
替代 clipboard := password 然后 ^v 粘贴，使用 SendInput，直接将密码键入，避免在剪贴板中留下痕迹。</description><guid isPermaLink="true">https://zb9678.github.io/post/KeePassPassword.html</guid><pubDate>Mon, 02 Dec 2024 00:19:09 +0000</pubDate></item><item><title>不显示剪贴板</title><link>https://zb9678.github.io/post/bu-xian-shi-jian-tie-ban.html</link><description>; 定义全局标志变量&#13;
Global ClipboardLock := false&#13;
Rctrl &amp; s::&#13;
    ClipboardLock := true  ; 设置标志为 true，锁定剪贴板监控&#13;
    clipboard := '测试密码' ; 修改剪贴板内容&#13;
&#13;
## 例子&#13;
&#13;
```&#13;
; 定义全局标志变量&#13;
Global ClipboardLock := false&#13;
Rctrl &amp; d::&#13;
    ClipboardLock := true  ; 设置标志为 true，锁定剪贴板监控&#13;
    clipboard := '密码' ; 修改剪贴板内容&#13;
&#13;
send, zcr071225@gmail.com&#13;
sleep, 100&#13;
send, {tab}&#13;
sleep, 200&#13;
KeyWait, d , D&#13;
send, sdeb85&#13;
Return&#13;
```。</description><guid isPermaLink="true">https://zb9678.github.io/post/bu-xian-shi-jian-tie-ban.html</guid><pubDate>Sun, 01 Dec 2024 15:50:02 +0000</pubDate></item><item><title>花儿五笔</title><link>https://zb9678.github.io/post/hua-er-wu-bi.html</link><description>&#13;
![image](https://github.com/user-attachments/assets/1c166806-e5cc-42dc-8ce1-45063d4dce69)&#13;
&#13;
![image](https://github.com/user-attachments/assets/58665878-45a1-4740-926c-78e09a227f4a)&#13;
&#13;
![image](https://github.com/user-attachments/assets/4f671aa1-096e-45f4-b17b-87c8182c919d)&#13;
&#13;
&#13;
##  查询编码&#13;
&#13;
复制要查的字    输入 zfc &#13;
&#13;
## 使用说明&#13;
&#13;
打开本手册    zsm &#13;
&#13;
##  在线加词 &#13;
&#13;
Ctrl + Alt + = &#13;
&#13;
##  生僻字开关 &#13;
&#13;
Ctrl + Alt + m &#13;
&#13;
##  中/英标点 &#13;
&#13;
Ctrl + . &#13;
&#13;
##  全/半角 &#13;
&#13;
Shift + 空格 &#13;
&#13;
## 临时生僻字&#13;
&#13;
 z键 引导进入临时生僻字模式，如：zaaaa 㠭 &#13;
&#13;
## 标点符号   “” （） 《》 〈〉 〔〕 「」 『』 【】 〖〗［］  &#13;
&#13;
zzbd&#13;
&#13;
## 数学符号  ＋ － ＜ ＝ ＞ ± × ÷ ∈ &#13;
&#13;
zzsx &#13;
&#13;
## 偏旁部首  勹 灬 冫 艹 屮 辶 刂 匚 阝 &#13;
&#13;
zzpp &#13;
&#13;
## 箭头符号  ← → ↑ ↓ ↗ ↙ ↘ ↖ ↔ ↕ &#13;
&#13;
zzjt &#13;
&#13;
## ;a&#13;
&#13;
![image](https://github.com/user-attachments/assets/ea137664-fa9e-4faa-8369-60af050131c9)&#13;
&#13;
## z zz &#13;
&#13;
![image](https://github.com/user-attachments/assets/75f734b3-acc1-4461-b261-997c7300abec)&#13;
&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/hua-er-wu-bi.html</guid><pubDate>Sun, 01 Dec 2024 05:37:11 +0000</pubDate></item><item><title>匹配19 20 10  并且后面须带2位数字</title><link>https://zb9678.github.io/post/pi-pei-19%2020%2010%20%20-bing-qie-hou-mian-xu-dai-2-wei-shu-zi.html</link><description>## (19|20|10)\d{2}&#13;
&#13;
![image](https://github.com/user-attachments/assets/210a23b7-70dd-451a-91a5-f13a2526c2bd)&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/pi-pei-19%2020%2010%20%20-bing-qie-hou-mian-xu-dai-2-wei-shu-zi.html</guid><pubDate>Sun, 01 Dec 2024 03:05:49 +0000</pubDate></item><item><title>匹配//开头的行 注意：可能有空格</title><link>https://zb9678.github.io/post/pi-pei----kai-tou-de-xing-%20-zhu-yi-%EF%BC%9A-ke-neng-you-kong-ge.html</link><description>## ^\s*٧٧.*$&#13;
&#13;
![03](https://github.com/user-attachments/assets/304b04b2-7c27-474b-b881-434de78a74e7)&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/pi-pei----kai-tou-de-xing-%20-zhu-yi-%EF%BC%9A-ke-neng-you-kong-ge.html</guid><pubDate>Sun, 01 Dec 2024 03:03:01 +0000</pubDate></item><item><title>贪婪型元字符</title><link>https://zb9678.github.io/post/tan-lan-xing-yuan-zi-fu.html</link><description>## * 和 + 都是贪婪型元字符&#13;
&#13;
![01](https://github.com/user-attachments/assets/c6f569c5-495d-4abd-8138-ba2f0e6e80f7)&#13;
&#13;
## *?、+? 和 {m, n)?懒惰型元字符&#13;
&#13;
![02](https://github.com/user-attachments/assets/99ff2c98-5a4e-4906-9877-2a3b2617fd39)&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/12.01:10:59:07.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/tan-lan-xing-yuan-zi-fu.html</guid><pubDate>Sun, 01 Dec 2024 02:47:29 +0000</pubDate></item><item><title>git 相关</title><link>https://zb9678.github.io/post/git%20-xiang-guan.html</link><description>## 在桌面克隆zb9678/    zb9678.github.io&#13;
&#13;
- Vscode 文件/打开文件夹/桌面&#13;
- ctrl+`  进入终端&#13;
- 右侧+号位置选择 Git bash &#13;
-  git clone git@github.com:zb9678/zb9678.github.io.git&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:08:53:04.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
```&#13;
z@k MINGW64 ~/Desktop&#13;
$  git clone git@github.com:zb9678/zb9678.github.io.git&#13;
```&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:08:49:51.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
===============================================================&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:12:56.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:07:49.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:08:57.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:09:27.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:10:18.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:11:36.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:12:16.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.30:00:11:08.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.29:23:45:30.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.29:23:42:22.png' style='width:400px;'&gt;&lt;/p&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/git%20-xiang-guan.html</guid><pubDate>Fri, 29 Nov 2024 16:13:41 +0000</pubDate></item><item><title>正则 筛选 IPv4 的最佳方法 </title><link>https://zb9678.github.io/post/zheng-ze-%20-shai-xuan-%20IPv4%20-de-zui-jia-fang-fa-%20.html</link><description>## 筛选 IPv4&#13;
&#13;
    (\d+\.)+\d+&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.29:21:50:21.png' style='width:400px;'&gt;&lt;/p&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/zheng-ze-%20-shai-xuan-%20IPv4%20-de-zui-jia-fang-fa-%20.html</guid><pubDate>Fri, 29 Nov 2024 13:51:09 +0000</pubDate></item><item><title>AHK 检查服务是否开启</title><link>https://zb9678.github.io/post/AHK%20-jian-cha-fu-wu-shi-fou-kai-qi.html</link><description>- 检查运行的应用有几种方法，例如 #IfWinActive, ahk_exe, wt 或 if WinActive('wt') 等。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-jian-cha-fu-wu-shi-fou-kai-qi.html</guid><pubDate>Thu, 28 Nov 2024 12:05:38 +0000</pubDate></item><item><title>AHK 软件小菜单</title><link>https://zb9678.github.io/post/AHK%20-ruan-jian-xiao-cai-dan.html</link><description>&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/cdn/B11.22:22:52:39.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
## choice1.vbs&#13;
&#13;
```&#13;
Set zz = CreateObject('WScript.Shell')&#13;
zz.Run 'choice1.bat', 0, False&#13;
```&#13;
&#13;
## choice1.bat&#13;
&#13;
```&#13;
@echo off&#13;
chcp 65001&#13;
choice1.ahk&#13;
echo ErrorLevel=%ErrorLevel%&#13;
&#13;
if '%ErrorLevel%'=='1' (&#13;
    echo Word&#13;
) else if '%ErrorLevel%'=='2' (&#13;
    echo EXCEL&#13;
) else if '%ErrorLevel%'=='3' (&#13;
    echo POWERPNT&#13;
) else (&#13;
    echo 未知的选择&#13;
)&#13;
pause&#13;
```&#13;
&#13;
## ControlColor.ahk&#13;
&#13;
```&#13;
; http://www.autohotkey.com/board/topic/104539-controlcol-set-background-and-text-color-gui-controls/&#13;
&#13;
ControlColor(Control, Window, bc := '', tc := '', Redraw := True) {&#13;
    Local a := {}&#13;
    a['c']  := Control&#13;
    a['g']  := Window&#13;
    a['bc'] := (bc == '') ? '' : (((bc &amp; 255) &lt;&lt; 16) + (((bc &gt;&gt; 8) &amp; 255) &lt;&lt; 8) + (bc &gt;&gt; 16))&#13;
    a['tc'] := (tc == '') ? '' : (((tc &amp; 255) &lt;&lt; 16) + (((tc &gt;&gt; 8) &amp; 255) &lt;&lt; 8) + (tc &gt;&gt; 16))&#13;
&#13;
    CC_WindowProc('Set', a, '', '')&#13;
&#13;
    If (Redraw) {&#13;
        WinSet Redraw,, ahk_id %Control%&#13;
    }&#13;
}&#13;
&#13;
CC_WindowProc(hWnd, uMsg, wParam, lParam) {&#13;
    Local tc, bc, a&#13;
    Static Win := {}&#13;
    ; Critical&#13;
&#13;
    If uMsg Between 0x132 And 0x138 ; WM_CTLCOLOR(MSGBOX|EDIT|LISTBOX|BTN|DLG|SCROLLBAR|STATIC)&#13;
    If (Win[hWnd].HasKey(lParam)) {&#13;
        If (tc := Win[hWnd, lParam, 'tc']) {&#13;
            DllCall('gdi32.dll\SetTextColor', 'Ptr', wParam, 'UInt', tc)&#13;
        }&#13;
&#13;
        If (bc := Win[hWnd, lParam, 'bc']) {&#13;
            DllCall('gdi32.dll\SetBkColor',   'Ptr', wParam, 'UInt', bc)&#13;
        }&#13;
&#13;
        Return Win[hWnd, lParam, 'Brush'] ; Return the HBRUSH to notify the OS that we altered the HDC.&#13;
    }&#13;
&#13;
    If (hWnd == 'Set') {&#13;
        a := uMsg&#13;
        Win[a.g, a.c] := a&#13;
&#13;
        If ((Win[a.g, a.c, 'tc'] == '') &amp;&amp; (Win[a.g, a.c, 'bc'] == '')) {&#13;
            Win[a.g].Remove(a.c, '')            &#13;
        }&#13;
&#13;
        If (!Win[a.g, 'WindowProcOld']) {&#13;
            Win[a.g,'WindowProcOld'] := DllCall('SetWindowLong' . (A_PtrSize == 8 ? 'Ptr' : '')&#13;
            , 'Ptr', a.g, 'Int', -4, 'Ptr', RegisterCallback('CC_WindowProc', '', 4), 'UPtr')&#13;
        }&#13;
&#13;
        If (Win[a.g, a.c, 'bc'] != '') {&#13;
            Win[a.g, a.c, 'Brush'] := DllCall('gdi32.dll\CreateSolidBrush', 'UInt', a.bc, 'UPtr')&#13;
        }&#13;
&#13;
        Return&#13;
    }&#13;
&#13;
    Return DllCall('CallWindowProc', 'Ptr', Win[hWnd, 'WindowProcOld'], 'Ptr', hWnd, 'UInt', uMsg, 'Ptr', wParam, 'Ptr', lParam, 'Ptr')&#13;
}&#13;
&#13;
```&#13;
&#13;
&#13;
## choice1.ahk&#13;
&#13;
```&#13;
&#13;
#SingleInstance Force&#13;
#NoEnv&#13;
SetWorkingDir %A_ScriptDir%&#13;
SetBatchLines -1&#13;
&#13;
#Include %A_ScriptDir%\ControlColor.ahk&#13;
&#13;
Gui +hWndhMainWnd&#13;
Gui Font, s9, Segoe UI&#13;
Gui Color, 0xFF8000&#13;
;Gui Add, Text, hWndhTxt x102 y49 w132 h71 +0x200, 选择要启动的软件&#13;
ControlColor(hTxt, hMainWnd, 0xFF8080, 0x800040)&#13;
&#13;
Gui Add, Button, gdd x29 y177 w80 h23, Word&#13;
Gui Add, Button, gee x130 y177 w80 h23, EXCEL&#13;
Gui Add, Button, gff x234 y177 w80 h23, POWERPNT&#13;
&#13;
Gui Add, Button, gaa x29 y137 w80 h23, 11Manager&#13;
Gui Add, Button, gbb x130 y137 w80 h23, 右键设置&#13;
Gui Add, Button, gcc x234 y137 w80 h23, 任务管理器&#13;
&#13;
Gui Add, Button, ggg x29 y97 w80 h23, 键盘可视化&#13;
Gui Add, Button, ghh x130 y97 w80 h23, 重复文件&#13;
Gui Add, Button, gii x234 y97 w80 h23, 磁盘碎片&#13;
&#13;
Gui Add, Button, gr x29 y57 w80 h23, 文件对比&#13;
Gui Add, Button, gs x130 y57 w80 h23, Joplin&#13;
Gui Add, Button, gt x234 y57 w80 h23, 输入法管理&#13;
&#13;
Gui Add, Button, gu x29 y17 w80 h23, CorelDRW&#13;
Gui Add, Button, gv x130 y17 w80 h23, PDFXEdit&#13;
Gui Add, Button, gw x234 y17 w80 h23, RegWork&#13;
&#13;
Gui Add, Button, gx x29 y217 w80 h23, 批量重命名&#13;
Gui Add, Button, gy x130 y217 w80 h23, KeePass&#13;
Gui Add, Button, gz x234 y217 w80 h23, WindTerm&#13;
&#13;
Gui Show, w340 h260, 选择要启动的软件&#13;
Return&#13;
&#13;
gg:&#13;
run C:\3\5\键盘可视化Keyviz\keyviz.exe&#13;
ExitApp 7  ; 设置返回码为 7&#13;
Return&#13;
&#13;
hh:&#13;
run C:\3\6 Duplicate Cleaner v4.1.1 Portable\DuplicateCleanerProPortable.exe&#13;
ExitApp 8  ; 设置返回码为 8&#13;
Return&#13;
&#13;
ii:&#13;
run C:\3\7 SmartDefrag\SmartDefrag.exe&#13;
ExitApp 9  ; 设置返回码为 9&#13;
Return&#13;
&#13;
dd:&#13;
run C:\0　　tool\0\9 Office\9                Office2016\Office16\WINWORD.EXE&#13;
ExitApp 1  ; 设置返回码为 1&#13;
Return&#13;
&#13;
ee:&#13;
run D:\ahk1.0\1\2\00   快捷键目录.xlsx&#13;
ExitApp 2  ; 设置返回码为 2&#13;
Return&#13;
&#13;
ff:&#13;
run C:\0　　tool\0\9 Office\9                Office2016\Office16\POWERPNT.EXE&#13;
ExitApp 3  ; 设置返回码为 3&#13;
Return&#13;
&#13;
aa:&#13;
run C:\3\Windows11Manager\Windows11Manager.exe&#13;
ExitApp 4  ; 设置返回码为 4&#13;
Return&#13;
&#13;
bb:&#13;
run C:\3\Windows11Manager\App\ContextMenuManager.exe&#13;
ExitApp 5  ; 设置返回码为 5&#13;
Return&#13;
&#13;
cc:&#13;
run C:\3\Windows11Manager\App\MyTask.exe&#13;
ExitApp 6  ; 设置返回码为 6&#13;
Return&#13;
&#13;
r:&#13;
run C:\3\9BCompare\BCompare.exe&#13;
ExitApp 10  ; 设置返回码为 10&#13;
Return&#13;
&#13;
s:&#13;
run C:\3\9 JoplinPortable2\Joplin.exe&#13;
ExitApp 11  ; 设置返回码为 11&#13;
Return&#13;
&#13;
t:&#13;
run C:\3\9 imetl3输入法\输入法管理器.exe&#13;
ExitApp 12  ; 设置返回码为 12&#13;
Return&#13;
&#13;
u:&#13;
run C:\3\9 CorelDRAW Graphics Suite X4\Programs\CorelDRW.exe&#13;
ExitApp 13  ; 设置返回码为 13&#13;
Return&#13;
&#13;
v:&#13;
run C:\3\PDFXEdit10_Portable_x64\PDFXEdit.exe&#13;
ExitApp 14  ; 设置返回码为 14&#13;
Return&#13;
&#13;
w:&#13;
run C:\3\Registry Workshop\RegWorkshopX64.exe&#13;
ExitApp 15  ; 设置返回码为 15&#13;
Return&#13;
&#13;
x:&#13;
run C:\3\9 ReNamer\ReNamer.exe&#13;
ExitApp 16  ; 设置返回码为 16&#13;
Return&#13;
&#13;
y:&#13;
run C:\3\9KeePass-2.52\KeePass.exe&#13;
ExitApp 17  ; 设置返回码为 17&#13;
Return&#13;
&#13;
z:&#13;
run C:\3\WindTerm_2.6.1\WindTerm.exe&#13;
ExitApp 18  ; 设置返回码为 18&#13;
Return&#13;
&#13;
GuiEscape:&#13;
GuiClose:&#13;
    ExitApp&#13;
```。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-ruan-jian-xiao-cai-dan.html</guid><pubDate>Fri, 22 Nov 2024 14:52:46 +0000</pubDate></item><item><title>AHK picgo截图、编辑、上传、链接一键完成</title><link>https://zb9678.github.io/post/AHK%20picgo-jie-tu-%E3%80%81-bian-ji-%E3%80%81-shang-chuan-%E3%80%81-lian-jie-yi-jian-wan-cheng.html</link><description>## 脚本内容&#13;
&#13;
```&#13;
F1 &amp; a::&#13;
Text= ⭕       上传图片中     ⭕ &#13;
btt(Text,600,0,,'Style4') &#13;
&#13;
    ; 启动截图程序&#13;
    Run, 'D:\ahk1.0\Lib\0 tool\9金山截图王\kscrcap.exe'&#13;
    &#13;
    ; 延迟 2 秒后弹出确认对话框&#13;
    Sleep, 2000&#13;
    MsgBox, 4,, 请在完成截图和编辑后点击“是”确认上传图片。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20picgo-jie-tu-%E3%80%81-bian-ji-%E3%80%81-shang-chuan-%E3%80%81-lian-jie-yi-jian-wan-cheng.html</guid><pubDate>Fri, 22 Nov 2024 08:44:52 +0000</pubDate></item><item><title>AHK upgit截图、编辑、上传、链接一键完成</title><link>https://zb9678.github.io/post/AHK%20upgit-jie-tu-%E3%80%81-bian-ji-%E3%80%81-shang-chuan-%E3%80%81-lian-jie-yi-jian-wan-cheng.html</link><description>## 脚本部分&#13;
&#13;
```&#13;
F1 &amp; s::&#13;
    ; 显示上传中提示&#13;
    Text := '⭕ 上传图片中 ⭕'&#13;
    btt(Text, 600, 0, , 'Style4')&#13;
&#13;
    ; 启动截图程序&#13;
    Run, 'D:\ahk1.0\Lib\0 tool\9金山截图王\kscrcap.exe'&#13;
    &#13;
    ; 延迟 2 秒后弹出确认对话框&#13;
    Sleep, 2000&#13;
    MsgBox, 4,, 请在完成截图和编辑后点击“是”确认上传图片。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20upgit-jie-tu-%E3%80%81-bian-ji-%E3%80%81-shang-chuan-%E3%80%81-lian-jie-yi-jian-wan-cheng.html</guid><pubDate>Fri, 22 Nov 2024 08:37:44 +0000</pubDate></item><item><title>AHK 限制单进程运行</title><link>https://zb9678.github.io/post/AHK%20-xian-zhi-dan-jin-cheng-yun-xing.html</link><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-xian-zhi-dan-jin-cheng-yun-xing.html</guid><pubDate>Fri, 22 Nov 2024 08:34:17 +0000</pubDate></item><item><title>AHK ahk1.1修改后重载 定时重载2个脚本</title><link>https://zb9678.github.io/post/AHK%20ahk1.1-xiu-gai-hou-zhong-zai-%20-ding-shi-zhong-zai-2-ge-jiao-ben.html</link><description>```&#13;
#Persistent&#13;
#SingleInstance ignore&#13;
&#13;
; 设置定时器&#13;
SetTimer, ReloadCurrentScript, % ((1000 * 60 * 15) * 1)  ; 15分钟自动重载当前脚本&#13;
SetTimer, ReloadCl3Script, % ((1000 * 60 * 10) * 1)  ; 10分钟自动重载 cl3.ahk&#13;
&#13;
; 定义 cl3.ahk 的路径&#13;
Cl3ScriptPath := 'D:\ahk1.0\CL3-1.106\cl3.ahk'  ; 替换为 cl3.ahk 的实际路径&#13;
AutoHotkeyPath := 'C:\Program Files\AutoHotkey\AutoHotkey.exe'  ; 替换为 AutoHotkey.exe 的完整路径&#13;
&#13;
; 初始化当前脚本的修改时间&#13;
FileGetTime, ScriptStartModTime, %A_ScriptFullPath%&#13;
SetTimer, CheckScriptUpdate, 500  ; 每500毫秒检查一次当前脚本的修改时间&#13;
&#13;
return&#13;
&#13;
; 定时刷新当前脚本&#13;
ReloadCurrentScript:&#13;
Reload&#13;
return&#13;
&#13;
; 定时刷新 cl3.ahk&#13;
ReloadCl3Script:&#13;
if FileExist(Cl3ScriptPath) {&#13;
    Run, % AutoHotkeyPath . ' ' . Cl3ScriptPath&#13;
} else {&#13;
    MsgBox, 找不到 cl3.ahk 文件，请检查路径。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20ahk1.1-xiu-gai-hou-zhong-zai-%20-ding-shi-zhong-zai-2-ge-jiao-ben.html</guid><pubDate>Thu, 21 Nov 2024 13:58:15 +0000</pubDate></item><item><title>AHK 2个脚本修改及定时都重载</title><link>https://zb9678.github.io/post/AHK%202-ge-jiao-ben-xiu-gai-ji-ding-shi-du-zhong-zai.html</link><description>```&#13;
#Persistent&#13;
#SingleInstance ignore&#13;
&#13;
; 设置15分钟自动刷新&#13;
SetTimer, dsh1, % ((1000*60*15) * 1)&#13;
&#13;
; 初始化当前脚本的修改时间&#13;
FileGetTime, ScriptStartModTime, %A_ScriptFullPath%&#13;
SetTimer, CheckScriptUpdate, 1000  ; 每100毫秒检查一次脚本修改&#13;
&#13;
; 初始化另一个脚本的路径和修改时间&#13;
OtherScriptPath := 'D:\ahk1.0\CL3-1.106\cl3.ahk'  &#13;
FileGetTime, OtherScriptModTime, %OtherScriptPath%&#13;
SetTimer, CheckOtherScriptUpdate, 1000  ; 每100毫秒检查另一个脚本的修改&#13;
&#13;
return&#13;
&#13;
; 定时刷新当前脚本和另一个脚本&#13;
dsh1:&#13;
Reload  ; 重载当前脚本&#13;
; 检查并重载 cl3.ahk&#13;
if FileExist(OtherScriptPath) {&#13;
    Run, % 'AutoHotkey.exe ' . OtherScriptPath&#13;
}&#13;
return&#13;
&#13;
; 检查当前脚本的修改&#13;
CheckScriptUpdate() {&#13;
    global ScriptStartModTime&#13;
    ; 获取当前的修改时间&#13;
    FileGetTime, curModTime, %A_ScriptFullPath%&#13;
    if (curModTime != ScriptStartModTime) {&#13;
        SetTimer, CheckScriptUpdate, Off  ; 关闭定时器，防止重复触发&#13;
        Reload&#13;
    }&#13;
}&#13;
&#13;
; 检查 cl3.ahk 的修改&#13;
CheckOtherScriptUpdate() {&#13;
    global OtherScriptPath, OtherScriptModTime&#13;
    ; 获取另一个脚本的修改时间&#13;
    FileGetTime, curModTime, %OtherScriptPath%&#13;
    if (curModTime != OtherScriptModTime) {&#13;
        ; 更新修改时间并重载脚本&#13;
        OtherScriptModTime := curModTime&#13;
        Run, % 'AutoHotkey.exe ' . OtherScriptPath&#13;
    }&#13;
}&#13;
&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  保存后  自动刷新脚本  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 01-45&#13;
```。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%202-ge-jiao-ben-xiu-gai-ji-ding-shi-du-zhong-zai.html</guid><pubDate>Thu, 21 Nov 2024 13:57:03 +0000</pubDate></item><item><title>bat 查看剪贴板内容</title><link>https://zb9678.github.io/post/bat%20-cha-kan-jian-tie-ban-nei-rong.html</link><description>## 通过 PowerShell 检查剪贴板内容： &#13;
&#13;
- 在 PowerShell 中运行以下命令，查看剪贴板的实际内容：&#13;
&#13;
`PS C:\Users\z&gt; Get-Clipboard&#13;
powershell -command 'Get-Clipboard     这行内容即剪贴板中的内容。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20-cha-kan-jian-tie-ban-nei-rong.html</guid><pubDate>Wed, 20 Nov 2024 15:04:21 +0000</pubDate></item><item><title>cmd 转到并显示新目录下的exe文件</title><link>https://zb9678.github.io/post/cmd%20-zhuan-dao-bing-xian-shi-xin-mu-lu-xia-de-exe-wen-jian.html</link><description>`c:\Users\z\Desktop&gt;cd /d d:\3 &amp;&amp; dir *.exe`&#13;
&#13;
 ```&#13;
驱动器 D 中的卷是 d&#13;
 卷的序列号是 D2DD-FBCA&#13;
&#13;
 d:\3 的目录&#13;
&#13;
11.05 周二  20:11         7,782,400 9OneDrive for Business 直链生成工具 v1.2.0.0.exe&#13;
11.05 周二  20:11         1,017,528 IP地址修改器 V5.0.6.1.exe&#13;
11.05 周二  20:11         88,157,191 zlibrary-setup-portable-latest.exe&#13;
11.05 周二  20:11        196,608 个人文件转移工具 v2.0.exe&#13;
11.05 周二  20:11        3,268,973 文件改名-ReNamerPro_7.5_V2.exe&#13;
12.12 周二  17:34        31,719,930 极限投屏-0.0.6.8.exe&#13;
               6 个文件      132,142,630 字节&#13;
               0 个目录      114,321,457,152 可用字节&#13;
```。</description><guid isPermaLink="true">https://zb9678.github.io/post/cmd%20-zhuan-dao-bing-xian-shi-xin-mu-lu-xia-de-exe-wen-jian.html</guid><pubDate>Wed, 20 Nov 2024 00:57:47 +0000</pubDate></item><item><title>cmd 查看执行历史</title><link>https://zb9678.github.io/post/cmd%20-cha-kan-zhi-xing-li-shi.html</link><description>## 运行 cmd&#13;
`C:\Users\z&gt;`&#13;
&#13;
## 进入桌面&#13;
```&#13;
C:\Users\z&gt;cd c:\users\z\desktop&#13;
c:\Users\z\Desktop&gt;&#13;
```&#13;
&#13;
## 查看桌面文件 h.bat 的内容&#13;
&#13;
- /history可以使用/h取代&#13;
```&#13;
C:\Users\z\Desktop&gt;type h.bat&#13;
doskey /h&#13;
```&#13;
&#13;
## 执行 h.bat&#13;
`C:\Users\z\Desktop&gt;h`&#13;
&#13;
相当于执行了下面&#13;
`C:\Users\z\Desktop&gt;doskey /h`&#13;
&#13;
### 显示出执行过的命令历史&#13;
&#13;
```&#13;
dir&#13;
doskey /h&#13;
type 1.bat&#13;
```&#13;
&#13;
## 将执行过的命令输出到 1.cmd 文件中&#13;
&#13;
### 先制作 1.bat&#13;
&#13;
```&#13;
@echo off&#13;
doskey /h &gt; C:\Users\z\Desktop\1.cmd&#13;
echo %CD% | clip&#13;
// 将路径输出到剪贴板&#13;
```&#13;
&#13;
### 执行 1.bat&#13;
`c:\Users\z\Desktop&gt;s`&#13;
&#13;
### 查看 1.cmd 中的输出内容&#13;
`c:\Users\z\Desktop&gt;type 1.cmd`&#13;
&#13;
```&#13;
cd c:\users\z\desktop&#13;
h&#13;
s&#13;
```&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/cmd%20-cha-kan-zhi-xing-li-shi.html</guid><pubDate>Wed, 20 Nov 2024 00:15:16 +0000</pubDate></item><item><title>gitlab　同步</title><link>https://zb9678.github.io/post/gitlab%E3%80%80-tong-bu.html</link><description>##  gitlab 登录&#13;
&#13;
- https://gitlab.com/users/sign_in&#13;
&#13;
## 新建空白项目&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:07:26.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:11:58.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:14:03.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:15:13.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:21:23.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:21:51.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
## 得到 GITLAB_PAT    glpat-sWZjDWp5ruPVYXL_RTPo&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:23:06.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
=============================================&#13;
&#13;
## Github 设置&#13;
&#13;
- https://github.com/zb9678/zb9678.github.io/settings/secrets/actions&#13;
&#13;
- 设置3个 secrets&#13;
&#13;
GITLAB_USERNAME	zb9678&#13;
GITLAB_REPO	Gitlab      zb9678.github.io1&#13;
GITLAB_PAT	                glpat-sWZjDWp5ruPVYXL_RTPo&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:26:56.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:28:24.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:29:30.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&#13;
## Github 设置同步 sync-to-gitlab.yml&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:33:20.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:32:05.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
---------------------------------------------------------------------------------------------------&#13;
&#13;
##   sync-to-gitlab.yml 　内容&#13;
&#13;
&#13;
&#13;
```&#13;
name: Sync to GitLab&#13;
&#13;
on:&#13;
  push:&#13;
    branches:&#13;
      - main&#13;
  workflow_dispatch:&#13;
&#13;
jobs:&#13;
  sync:&#13;
    runs-on: ubuntu-latest&#13;
&#13;
    env:&#13;
      GITLAB_USERNAME: ${{ secrets.GITLAB_USERNAME }}&#13;
      GITLAB_REPO: ${{ secrets.GITLAB_REPO }}&#13;
      GITLAB_PAT: ${{ secrets.GITLAB_PAT }}&#13;
&#13;
    steps:&#13;
    - name: Checkout repository&#13;
      uses: actions/checkout@v4.1.1&#13;
      with:&#13;
        fetch-depth: 0&#13;
&#13;
    - name: Set up Git&#13;
      run: |&#13;
        git config --global user.name 'github-actions'&#13;
        git config --global user.email 'github-actions@github.com'&#13;
&#13;
    - name: Add GitLab remote&#13;
      run: git remote add gitlab https://${{ env.GITLAB_USERNAME }}:${{ env.GITLAB_PAT }}@gitlab.com/${{ env.GITLAB_USERNAME }}/${{ env.GITLAB_REPO }}.git&#13;
&#13;
    - name: Force push to GitLab&#13;
      run: git push gitlab main --force&#13;
```&#13;
&#13;
## gitlab 删库&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:41:41.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zb9678/img/main/im2/z11.19:17:43:32.png' style='width:400px;'&gt;&lt;/p&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/gitlab%E3%80%80-tong-bu.html</guid><pubDate>Tue, 19 Nov 2024 09:12:14 +0000</pubDate></item><item><title>正则 * 和 + 都是贪婪型元字符</title><link>https://zb9678.github.io/post/zheng-ze-%20-%20-he-%20%2B%20-du-shi-tan-lan-xing-yuan-zi-fu.html</link><description>## a.+c　&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241117111303.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/zheng-ze-%20-%20-he-%20%2B%20-du-shi-tan-lan-xing-yuan-zi-fu.html</guid><pubDate>Sun, 17 Nov 2024 03:13:08 +0000</pubDate></item><item><title>正则 匹配邮箱</title><link>https://zb9678.github.io/post/zheng-ze-%20-pi-pei-you-xiang.html</link><description>## [\w.]+@(\w+\.)+\w+　&#13;
&#13;
注：[\w.] 匹配的是字母数字或者 '.' ,在其后面加上 + ,表示匹配多次。</description><guid isPermaLink="true">https://zb9678.github.io/post/zheng-ze-%20-pi-pei-you-xiang.html</guid><pubDate>Sun, 17 Nov 2024 03:08:56 +0000</pubDate></item><item><title>正则 匹配19 20 10并且后面带２位数字</title><link>https://zb9678.github.io/post/zheng-ze-%20-pi-pei-19%2020%2010-bing-qie-hou-mian-dai-%EF%BC%92-wei-shu-zi.html</link><description>## (19|20|10)\d{2}　&#13;
&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241117110524.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/zheng-ze-%20-pi-pei-19%2020%2010-bing-qie-hou-mian-dai-%EF%BC%92-wei-shu-zi.html</guid><pubDate>Sun, 17 Nov 2024 03:05:30 +0000</pubDate></item><item><title>正则 筛选IPv6的最佳方法</title><link>https://zb9678.github.io/post/zheng-ze-%20-shai-xuan-IPv6-de-zui-jia-fang-fa.html</link><description>## 这种方法比较完美&#13;
&#13;
  `(\w+:)+(:+)\w+:\w+`&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.29:21:40:32.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
=================================================&#13;
&#13;
## 而这种方法有缺陷&#13;
&#13;
  `(\w+:+)+(\w+)+`&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zb9678/img@main/up1/11.29:21:41:44.png' style='width:400px;'&gt;&lt;/p&gt;&#13;
&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/zheng-ze-%20-shai-xuan-IPv6-de-zui-jia-fang-fa.html</guid><pubDate>Sun, 17 Nov 2024 03:01:20 +0000</pubDate></item><item><title>正则式</title><link>https://zb9678.github.io/post/zheng-ze-shi.html</link><description>`&lt;!DOCTYPE html&gt;&#13;
    &lt;html lang='zh-CN'&gt;&#13;
&lt;head&gt;&#13;
    &lt;meta charset='UTF-8'&gt;&#13;
    &lt;meta name='viewport' content='width=device-width, initial-scale=1.0'&gt;&#13;
  &#13;
    &lt;title&gt;🚨正则式&lt;/title&gt;&#13;
  &#13;
    &lt;style&gt;&#13;
      &#13;
          * {&#13;
            margin: 0;&#13;
            padding: 0;        &#13;
            }&#13;
                        &#13;
        .b  {&#13;
            white-space: nowrap; /* 防止换行 */&#13;
            overflow: hidden;    /* 隐藏溢出内容 */&#13;
            text-overflow: ellipsis; /* 添加省略号表示溢出 */&#13;
            display: inline-block; /* 使其适应内容宽度 */&#13;
            font-family: KaiTi;&#13;
            font-size: 24px;&#13;
            color: #00e500;&#13;
            }&#13;
&#13;
    .highlight {&#13;
            color: red;&#13;
            font-weight: bold;&#13;
            }&#13;
&#13;
 .video-container{&#13;
            display: flex;&#13;
            justify-content: right;&#13;
            align-items: center;&#13;
            height: 100vh;&#13;
            }&#13;
      &#13;
        body {&#13;
            background-color: #282A36;&#13;
            padding-top: 60px; /* 根据工具栏的高度调整 */&#13;
            color: #f5f5f5;&#13;
            line-height: 1.6;&#13;
            margin-left: 350px;&#13;
            margin-right: 200px; /* 根据目录宽度调整 */&#13;
            font-family: Arial, sans-serif;&#13;
            counter-reset: section;&#13;
            display: flex;&#13;
            flex-direction: column;&#13;
            align-items: flex-start; /* 所有内容左对齐 */&#13;
            }&#13;
      &#13;
    h1, h2, h3 {&#13;
            color: #4592af;&#13;
            margin-left: 2px;&#13;
            white-space: nowrap;     /* 防止换行 */&#13;
            overflow: hidden;        /* 隐藏溢出内容 */&#13;
            text-overflow: ellipsis; /* 添加省略号表示溢出 */&#13;
            margin-top: 2px;&#13;
            margin-bottom: -1px;&#13;
            display: block;          /* 确保是块级元素 */&#13;
            font-size: 24px; /* 根据需要调整 */&#13;
            }&#13;
&#13;
        #toc {&#13;
            position: fixed;&#13;
            top: 5px;&#13;
            left: 5px;&#13;
            max-height: 90vh; /* 设置最大高度为视口高度的80% */&#13;
            max-width: 45vh;&#13;
            overflow-y: auto; /* 添加垂直滚动条 */&#13;
            background-color: rgba(40, 42, 54, 0.9); /* 半透明背景 */&#13;
            padding: 20px;&#13;
            border-radius: 5px;&#13;
            box-shadow: 0 0 1px rgba(0, 0, 0, 0.1);&#13;
                    font-size: 14px; /* 根据需要调整 */&#13;
            }&#13;
&#13;
       #toc ul {&#13;
            list-style-type: none;&#13;
            padding: 0;&#13;
            margin: 0;&#13;
            counter-reset: section; /* 重置计数器 */&#13;
            }&#13;
&#13;
      #toc li {&#13;
            counter-increment: section;&#13;
            }&#13;
&#13;
 #toc li::before {&#13;
            content: counter(section) '. ';&#13;
            color: #FF0000;&#13;
            }&#13;
&#13;
       #toc a {&#13;
            color: #4592af;&#13;
            text-decoration: none;&#13;
            }&#13;
&#13;
   #toc a:hover {&#13;
            text-decoration: underline;&#13;
            }&#13;
&#13;
     body &gt; h2 {&#13;
            counter-increment: section;&#13;
            }&#13;
&#13;
body &gt; h2::before{&#13;
            content: counter(section) '. ';&#13;
            color: #ff461f;&#13;
            }&#13;
          .code {&#13;
        font-family: monospace;&#13;
        background-color: #f4f4f4;&#13;
        padding: 5px;&#13;
        border: 1px solid #ccc;&#13;
        white-space: pre-wrap; /* 保持格式 */&#13;
    }&#13;
         &lt;/style&gt;&#13;
  &#13;
  &#13;
    &lt;/head&gt;&#13;
&lt;body&gt;&#13;
          &lt;marquee loop='99999' style='width: 100px;color:#d908a1;' &gt;&#13;
        正则表达式  &#13;
            &lt;input type='text' value='初级概念性知识' style='width: 100px; color:#0033fa;'&gt;&#13;
            &lt;input type='text' value='高级语法及应用' style='width: 100px; color:#08d971;'&gt;            &#13;
        &lt;/marquee&gt;&#13;
  &#13;
  &#13;
    &lt;div id='toc'&gt;&#13;
        &lt;!--&lt;h2&gt;目录&lt;/h2&gt;--&gt;&#13;
        &lt;ul id='toc-list'&gt;&#13;
            &lt;!-- 目录项将由JavaScript生成 --&gt;&#13;
        &lt;/ul&gt;&#13;
    &lt;/div&gt;&#13;
&#13;
  &#13;
  &#13;
  &#13;
  &#13;
  &#13;
  &#13;
  &lt;h2 id='section1'&gt;【回车】和【换行】&lt;/h2&gt;&#13;
    &lt;p&gt;&#13;
        在机械英文打字机上，有一个部件叫'字车'（carriage），每打一个单词，'字车'就前进一格。</description><guid isPermaLink="true">https://zb9678.github.io/post/zheng-ze-shi.html</guid><pubDate>Fri, 15 Nov 2024 15:44:02 +0000</pubDate></item><item><title>图床 修改默认为58img</title><link>https://zb9678.github.io/post/tu-chuang-%20-xiu-gai-mo-ren-wei-58img.html</link><description>&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241114094702.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zcr07/img/refs/heads/main/images/L11.14_09_48_52.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241114094930.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zcr07/img/refs/heads/main/images/L11.14_09_50_56.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zcr07/img/refs/heads/main/images/L11.14_09_53_54.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241114100433.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/tu-chuang-%20-xiu-gai-mo-ren-wei-58img.html</guid><pubDate>Thu, 14 Nov 2024 01:54:12 +0000</pubDate></item><item><title>bat  choices</title><link>https://zb9678.github.io/post/bat%20%20choices.html</link><description>CHOICE /T 10 /C YNC /D Y /M '按是(Y)、否(N)、取消(C).'&#13;
if errorlevel==3 goto CANCEL&#13;
if errorlevel==2 goto NO&#13;
if errorlevel==1 goto YES&#13;
goto END&#13;
&#13;
:CANCEL&#13;
echo 按了 C&#13;
goto END&#13;
&#13;
:NO&#13;
echo 按了 N&#13;
goto END&#13;
&#13;
:YES&#13;
echo 按了 Y&#13;
goto END&#13;
:END&#13;
&#13;
-----------------------------------------------------&#13;
&#13;
λ choice /?&#13;
&#13;
CHOICE [/C choices] [/N] [/CS] [/T timeout /D choice] [/M text]&#13;
&#13;
描述:&#13;
    该工具允许用户从选择列表选择一个项目并返回所选项目的索引。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20%20choices.html</guid><pubDate>Wed, 13 Nov 2024 15:33:45 +0000</pubDate></item><item><title>AHK  关于 ~</title><link>https://zb9678.github.io/post/AHK%20%20-guan-yu-%20~.html</link><description>## 单独按键&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241113141500.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
## 组合键&#13;
&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241113141707.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20%20-guan-yu-%20~.html</guid><pubDate>Wed, 13 Nov 2024 06:17:33 +0000</pubDate></item><item><title>AHK  关于 $ </title><link>https://zb9678.github.io/post/AHK%20%20-guan-yu-%20%24%20.html</link><description>&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241113141035.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20%20-guan-yu-%20%24%20.html</guid><pubDate>Wed, 13 Nov 2024 06:11:08 +0000</pubDate></item><item><title>AHK 关闭多个相同标题的窗口</title><link>https://zb9678.github.io/post/AHK%20-guan-bi-duo-ge-xiang-tong-biao-ti-de-chuang-kou.html</link><description>&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241112085429.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zcr07/img/refs/heads/main/images/L11.12_09_15_55.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
#SingleInstance Force&#13;
SetTitleMatchMode 2&#13;
&#13;
#n::&#13;
  run notepad&#13;
  Return&#13;
  &#13;
^!f4::&#13;
  WinGetTitle sTitle, A&#13;
  ; MsgBox %sTitle%&#13;
  ; InputBox, OutputVar [, Title, Prompt, HIDE, Width, Height, X, Y, Font, Timeout, Default]&#13;
  InputBox sTitle, 視窗標題, 請輸入視窗的標題文字, , 300, 150, , , , , %sTitle%&#13;
  if (sTitle = 'nb') {&#13;
      sTitle := '記事本'  ;; 或用 sTitle = 記事本&#13;
  } else if (sTitle = 'ie') {&#13;
      sTitle := 'Internet Explorer'&#13;
  }&#13;
  while WinExist(sTitle)　　　　　　　　　　　　　while多少满足条件　　此处为数个记事本&#13;
                                                if WinExist(sTitle)          if　 单个满足条件　　单个记事本&#13;
    WinClose&#13;
  Return。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-guan-bi-duo-ge-xiang-tong-biao-ti-de-chuang-kou.html</guid><pubDate>Tue, 12 Nov 2024 00:56:25 +0000</pubDate></item><item><title>AHK 中英文输入法切换</title><link>https://zb9678.github.io/post/AHK%20-zhong-ying-wen-shu-ru-fa-qie-huan.html</link><description>Rctrl::&#13;
loop,1&#13;
SoundBeep, 9000, 20&#13;
Send #{Space}&#13;
keywait, space&#13;
	V++&#13;
  	M := mod(V,2)  ;; 模數&#13;
  if M=1&#13;
  	SetDefaultKeyboard(0x0404)  ;; 切換為中文輸入&#13;
  else&#13;
  	SetDefaultKeyboard(0x0409)  ;; 切換為英文輸入&#13;
  return&#13;
&#13;
SetDefaultKeyboard(LocaleID) &#13;
{&#13;
  	Global SPI_SETDEFAULTINPUTLANG := 0x005A&#13;
  	SPIF_SENDWININICHANGE := 2&#13;
Lan := DllCall('LoadKeyboardLayout', 'Str', Format('{:08x}', LocaleID), 'Int', 0)&#13;
  	VarSetCapacity(Lan%LocaleID%, 4, 0)&#13;
  	NumPut(LocaleID, Lan%LocaleID%)&#13;
;Lan := 0xE0090404&#13;
  	DllCall('SystemParametersInfo', 'UInt', SPI_SETDEFAULTINPUTLANG, 'UInt', 0, 'UPtr', &amp;Lan%LocaleID%, 'UInt', SPIF_SENDWININICHANGE)&#13;
  	WinGet, windows, List&#13;
  	Loop %windows% &#13;
	{&#13;
	PostMessage 0x50, 0, %Lan%, , % 'ahk_id ' windows%A_Index%&#13;
	}&#13;
}&#13;
&#13;
&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  切换中英输入法   Rctrl  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 4-75&#13;
&#13;
# 上面是下面２种方法的合并&#13;
&#13;
Rctrl::&#13;
  V++&#13;
  M := mod(V,2)  ;; 模數&#13;
  if M=1&#13;
    SetDefaultKeyboard(0x0404)  ;; 切換為中文輸入&#13;
  else&#13;
    SetDefaultKeyboard(0x0409)  ;; 切換為英文輸入&#13;
  return&#13;
&#13;
SetDefaultKeyboard(LocaleID) {&#13;
  Global SPI_SETDEFAULTINPUTLANG := 0x005A&#13;
  SPIF_SENDWININICHANGE := 2&#13;
  Lan := DllCall('LoadKeyboardLayout', 'Str', Format('{:08x}', LocaleID), 'Int', 0)&#13;
  VarSetCapacity(Lan%LocaleID%, 4, 0)&#13;
  NumPut(LocaleID, Lan%LocaleID%)&#13;
  ;Lan := 0xE0090404&#13;
  DllCall('SystemParametersInfo', 'UInt', SPI_SETDEFAULTINPUTLANG, 'UInt', 0, 'UPtr', &amp;Lan%LocaleID%, 'UInt', SPIF_SENDWININICHANGE)&#13;
  WinGet, windows, List&#13;
  Loop %windows% {&#13;
    PostMessage 0x50, 0, %Lan%, , % 'ahk_id ' windows%A_Index%&#13;
  }&#13;
}&#13;
  return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  切换中英输入法   Rctrl  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 4-75&#13;
&#13;
Ralt::&#13;
if (A_PriorHotkey &lt;&gt; 'Ralt' or A_TimeSincePriorHotkey &gt; 400)&#13;
{&#13;
	; 两次按下时间间隔太长, 所以这不是一个两次按下.&#13;
	KeyWait, Ralt&#13;
	return&#13;
}&#13;
{&#13;
	loop,3&#13;
   	 SoundBeep, 4000, 50&#13;
}&#13;
{&#13;
	Text=全半角&#13;
	btt(Text,300,400,,'Style5')&#13;
	sleep, 600&#13;
	btt()​&#13;
	send, +{space}&#13;
	return&#13;
}&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  全半角  双击  Ralt  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 5-96&#13;
&#13;
Appskey::&#13;
	t:=-oldt+(oldt:=A_TickCount)&#13;
	if (t&lt;100 || t&gt;300)&#13;
    	Return&#13;
 	else oldt:=0&#13;
{&#13;
	loop,3&#13;
   	 SoundBeep, 3000, 30&#13;
	Text=中英标点&#13;
	btt(Text,,,,'Style6')&#13;
	sleep, 600&#13;
	btt()​&#13;
	send, ^.&#13;
	Return&#13;
}&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 中英标点  双击 Appskey    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 6-113&#13;
&#13;
&#13;
/*&#13;
Rctrl::&#13;
	loop,1&#13;
	SoundBeep, 9000, 20&#13;
	Send ^{Space}&#13;
	keywait, space&#13;
return&#13;
*/。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-zhong-ying-wen-shu-ru-fa-qie-huan.html</guid><pubDate>Mon, 11 Nov 2024 23:45:46 +0000</pubDate></item><item><title>AHK  关于 *</title><link>https://zb9678.github.io/post/AHK%20%20-guan-yu-%20-.html</link><description>&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241113135755.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20%20-guan-yu-%20-.html</guid><pubDate>Sat, 09 Nov 2024 09:09:55 +0000</pubDate></item><item><title>AHK 热字符串</title><link>https://zb9678.github.io/post/AHK%20-re-zi-fu-chuan.html</link><description>## ` :o:   ` &#13;
` :o:a111::ā    　结果　ā后无空格 `&#13;
o 即 omit　忽略空格不输出空格，但需空格触发 &#13;
&#13;
## :*:     &#13;
 :*:a111::ā     　结果　ā后无空格&#13;
自动触发转换，而且也不输出空格　&#13;
&#13;
==========================================&#13;
##  :?:　　可有前缀&#13;
:?:a1::ā       &#13;
sa1 空格完成替换　即a1前面可有字符。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-re-zi-fu-chuan.html</guid><pubDate>Sat, 09 Nov 2024 07:15:14 +0000</pubDate></item><item><title>winget upgrade   更新</title><link>https://zb9678.github.io/post/winget%20upgrade%20%20%20-geng-xin.html</link><description>## winget upgrade&#13;
查看需要更新的软件&#13;
&#13;
## winget upgrade 软件ID&#13;
开始更新&#13;
&#13;
## 如需中止，按 ctrl+c命令&#13;
&#13;
一定是复制软件ID&#13;
1.使用Winget安装、升级、卸载软件的常用命令&#13;
winget list    | 查看已安装的软件 |&#13;
winget search 7zip     |  搜索软件  |&#13;
winget install 7zip.zip   |  安装软件  |&#13;
winget upgrade 7zip.zip   |  升级软件  |&#13;
winget upgrade all    |  升级所有软件  |&#13;
winget uninstall 软件ID   |  卸载软件  |&#13;
&#13;
2.使用Winget安装软件时自定义安装路径&#13;
格式为：winget install 软件ID --location '自定义路径'&#13;
例子：winget install 7zip.7zip --location 'D:\Program Files\7zip'&#13;
&#13;
&#13;
![winget upgrade](https://github.com/user-attachments/assets/52a96e40-3341-4565-b193-e0e190cba5dc)&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/winget%20upgrade%20%20%20-geng-xin.html</guid><pubDate>Fri, 08 Nov 2024 10:15:42 +0000</pubDate></item><item><title>bat 命令大全</title><link>https://zb9678.github.io/post/bat%20-ming-ling-da-quan.html</link><description>## rem 和 ::注释命令&#13;
注释行不执行操作&#13;
&#13;
## pause暂停命令&#13;
运行该命令时，将显示下面的消息：请按任意键继续 . . .&#13;
一般用于看清楚屏幕上显示的内容&#13;
&#13;
## copy&#13;
copy 1.txt + 2.txt 3.txt     #合并 1.txt 和 2.txt 的内容，保存为 3.txt 文件如果不指定 3.txt ，则保存到 1.txt&#13;
copy 1.txt +                 #复制文件到自己，实际上是修改了文件日期&#13;
&#13;
## prn&#13;
代表打印机&#13;
&#13;
## copy拷贝文件&#13;
copy c:\test.txt d:\                  #复制 c:\test.txt 文件到 d:\&#13;
copy c:\test.txt d:\test.bak     #复制 c:\test.txt 文件到 d:\ ，并重命名为 test.bak&#13;
copy c:\*.*                              #复制 c:\ 所有文件到当前目录，不包括隐藏文件和系统文件，不指定目标路径，则默认目标路径为当前目录.&#13;
copy con test.txt                   #从屏幕上等待输入，按 Ctrl+Z 结束输入，输入内容存为test.txt文件con代表屏幕。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20-ming-ling-da-quan.html</guid><pubDate>Fri, 08 Nov 2024 07:05:56 +0000</pubDate></item><item><title>bat 设置共享</title><link>https://zb9678.github.io/post/bat%20-she-zhi-gong-xiang.html</link><description>@echo off&#13;
color 2f&#13;
mode con cols=50 lines=30&#13;
title  OKShare  【制作：wnsdt】&#13;
ver | findstr '6.1'&gt;nul &amp;&amp; set bulid=nt6 &amp;&amp; goto sc_top&#13;
ver | findstr '10.'&gt;nul &amp;&amp; set bulid=nt10 &amp;&amp; goto sc_top&#13;
ver | findstr '5.'&gt;nul &amp;&amp; set bulid=nt5 &amp;&amp; goto sc_top&#13;
ver | findstr '6.3'&gt;nul &amp;&amp; set bulid=nt10 &amp;&amp; goto sc_top&#13;
ver | findstr '6.2'&gt;nul &amp;&amp; set bulid=nt10 &amp;&amp; goto sc_top&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo                       警  告&#13;
echo.     &#13;
echo.&amp;echo.&amp;echo.&#13;
echo          软件不支持你的系统，按任意键退出！&#13;
pause&gt;nul 2&gt;nul&#13;
exit&#13;
:sc_top&#13;
cls&#13;
del /q %temp%\info.txt&gt;nul 2&gt;nul&#13;
:sc_menu&#13;
echo.&amp;echo.&amp;echo.&#13;
echo             局域网共享一键修复 19.3.13&#13;
echo.&#13;
echo    --------------------------------------------&#13;
echo.&amp;echo.&amp;echo.&#13;
echo               1、本机网络信息&#13;
echo.&#13;
echo               2、简单共享（无密码）&#13;
echo.&#13;
echo               3、密码共享&#13;
echo.&#13;
echo               4、共享和权限管理&#13;
echo.&#13;
echo               5、权限设置指南（图文）&#13;
echo.&#13;
echo               6、打印机共享指南（图文）&#13;
echo.&#13;
echo               7、更新与反馈&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
set select=&#13;
set str1=1234567&#13;
set /p select= 输入数字，按回车:&#13;
if not defined select goto sc_wrong&#13;
echo %select%|findstr '[%str1%]'&gt;nul||goto sc_wrong&#13;
if %select%==1 (goto sc_info)&#13;
if %select%==2 (goto sc_zd)&#13;
if %select%==3 (goto sc_sd)&#13;
if %select%==4 (goto sc_gl) &#13;
if %select%==5 (goto sc_help) &#13;
if %select%==6 (goto sc_print) &#13;
if %select%==7 (goto sc_update) &#13;
:sc_wrong&#13;
mshta vbscript:msgbox('只能输入1-7的数字',64,'提示')(window.close) &#13;
goto sc_top&#13;
:sc_info&#13;
cls&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo                  正在处理信息....&#13;
if %bulid%==nt5 (goto sc_nt5) else (goto sc_nt6)&#13;
:sc_nt5&#13;
(echo.&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
ping www.baidu.com -n 1 &gt;nul || echo              互联网状态：       [ 离线 ]&gt;&gt;%temp%\info.txt &amp;&amp; goto sc_ver_nt5&#13;
echo              互联网状态：       [ 在线 ]&gt;&gt;%temp%\info.txt&#13;
:sc_ver_nt5&#13;
(echo ----------------------------------------------------------&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
for /f 'skip=1 tokens=2-4 delims=, ' %%a in ('wmic os get caption') do (&#13;
if exist %windir%\SysWOW64 echo         系统版本：       %%a %%b %%c  64位&gt;&gt;%temp%\info.txt &amp; goto sc_ver_nt5_next&#13;
echo         系统版本：       %%a %%b %%c  32位&gt;&gt;%temp%\info.txt&#13;
)&#13;
:sc_ver_nt5_next&#13;
(echo.&#13;
echo         计算机名：            %COMPUTERNAME%&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
for /f 'tokens=2 delims= ' %%a in ('net config workstation^|findstr /c:'工作站域'') do echo         工作组：              %%a&gt;&gt;%temp%\info.txt &amp; goto sc_info_nt5&#13;
:sc_info_nt5&#13;
(echo.&#13;
echo         当前用户：            %USERNAME%&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
for /f 'delims=' %%a in ('date /t') do echo         本机日期：            %%a&gt;&gt;%temp%\info.txt&#13;
echo.&gt;&gt;%temp%\info.txt&#13;
for /f 'delims=' %%a in ('time /t') do echo         本机时间：            %%a&gt;&gt;%temp%\info.txt&#13;
echo ----------------------------------------------------------&gt;&gt;%temp%\info.txt&#13;
goto sc_info_more&#13;
:sc_nt6&#13;
(echo.&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
ping www.baidu.com -n 1 &gt;nul || echo          互联网状态：       [ 离线 ]&gt;&gt;%temp%\info.txt &amp;&amp; goto sc_ver_nt6&#13;
echo          互联网状态：       [ 在线 ]&gt;&gt;%temp%\info.txt&#13;
:sc_ver_nt6&#13;
(echo ----------------------------------------------------------&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
for /f 'skip=1 tokens=2-5 delims=?, ' %%a in ('wmic os get caption') do (&#13;
if exist %windir%\SysWOW64 echo    系统版本：      %%a %%b %%c %%d 64位&gt;&gt;%temp%\info.txt &amp; goto sc_ver_nt6_next&#13;
echo    系统版本：       %%a %%b %%c %%d 32位&gt;&gt;%temp%\info.txt&#13;
)&#13;
:sc_ver_nt6_next&#13;
(echo.&#13;
echo    计算机名：            %COMPUTERNAME%&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
for /f 'tokens=2 delims= ' %%a in ('net config workstation^|findstr /c:'工作站域'') do echo    工作组：              %%a&gt;&gt;%temp%\info.txt&#13;
(echo.&#13;
echo    当前用户：            %USERNAME%&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
for /f 'delims=' %%a in ('date /t') do echo    本机日期：            %%a&gt;&gt;%temp%\info.txt&#13;
echo.&gt;&gt;%temp%\info.txt&#13;
for /f 'delims=' %%a in ('time /t') do echo    本机时间：            %%a&gt;&gt;%temp%\info.txt&#13;
echo ----------------------------------------------------------&gt;&gt;%temp%\info.txt&#13;
:sc_info_more&#13;
if %bulid%==nt5 ipconfig /all|findstr /v /c:'Windows IP Configuration'|findstr /v /c:'Host Name'|findstr /v /c:'Primary Dns Suffix'|findstr /v /c:'Node Type'|findstr /v /c:'IP Routing Enabled'|findstr /v /c:'WINS Proxy Enabled'&gt;&gt;%temp%\info.txt &amp;&amp; goto sc_info_next&#13;
ipconfig /all|findstr /v /c:'Windows IP 配置'|findstr /v /c:'主机名'|findstr /v /c:'主 DNS 后缀'|findstr /v /c:'节点类型'|findstr /v /c:'IP 路由已启用'|findstr /v /c:'WINS 代理已启用'&gt;&gt;%temp%\info.txt&#13;
:sc_info_next&#13;
(echo.&#13;
echo ----------------------------------------------------------&#13;
echo.&#13;
echo.)&gt;&gt;%temp%\info.txt&#13;
start /w notepad %temp%\info.txt&#13;
del /q %temp%\info.txt&gt;nul 2&gt;nul&#13;
goto sc_top&#13;
:sc_zd&#13;
call :sc_qxfix&#13;
cls&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo                    开始修复......&#13;
net user guest /active:yes&gt;nul 2&gt;nul&#13;
net user guest ''&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v forceguest /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v LimitBlankPasswordUse /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
if %bulid%==nt10 reg add 'HKLM\SYSTEM\CurrentControlSet\Services\LanmanWorkstation\Parameters' /v AllowInsecureGuestAuth /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v restrictanonymoussam /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0' /v LmCompatibilityLevel /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v everyoneincludesanonymous /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v NoLmHash /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters' /v restrictnullsessaccess /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
goto sc_main&#13;
:sc_sd&#13;
call :sc_qxfix&#13;
cls&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo                    开始修复......&#13;
net user guest /active:no&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v forceguest /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0' /v NtlmMinClientSec /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\MSV1_0' /v NtlmMinServerSec /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
goto sc_main&#13;
:sc_main&#13;
sc config LanmanWorkstation start= auto&gt;nul 2&gt;nul&#13;
sc config LanmanServer start= auto&gt;nul 2&gt;nul&#13;
sc config Winmgmt start= auto&gt;nul 2&gt;nul&#13;
sc config RpcSs start= auto&gt;nul 2&gt;nul&#13;
sc config Netman start= auto&gt;nul 2&gt;nul&#13;
sc config RasMan start= demand&gt;nul 2&gt;nul&#13;
sc config SSDPSRV start= auto&gt;nul 2&gt;nul&#13;
sc config BFE start= auto&gt;nul 2&gt;nul&#13;
sc config ALG start= demand&gt;nul 2&gt;nul&#13;
sc config SharedAccess start= auto&gt;nul 2&gt;nul&#13;
net start SharedAccess /y&gt;nul 2&gt;nul&#13;
sc config Browser start= auto&gt;nul 2&gt;nul&#13;
net start Browser /y&gt;nul 2&gt;nul&#13;
sc config Dnscache start= auto&gt;nul 2&gt;nul&#13;
net start Dnscache /y&gt;nul 2&gt;nul&#13;
sc config Dhcp start= auto&gt;nul 2&gt;nul&#13;
net start Dhcp /y&gt;nul 2&gt;nul&#13;
sc config lmhosts start= auto&gt;nul 2&gt;nul&#13;
net start lmhosts /y&gt;nul 2&gt;nul&#13;
sc config Spooler start= auto&gt;nul 2&gt;nul&#13;
net start Spooler /y&gt;nul 2&gt;nul&#13;
sc config upnphost start= demand&gt;nul 2&gt;nul&#13;
net start upnphost /y&gt;nul 2&gt;nul&#13;
reg query 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\Netlogon' /v Start|findstr '0x4'&gt;nul 2&gt;nul &amp;&amp; sc config Netlogon start= demand&gt;nul 2&gt;nul&#13;
reg add 'HKLM\SYSTEM\CurrentControlSet\services\NetBT\Parameters' /v TransportBindName /t REG_SZ /d \Device\ /f&gt;nul 2&gt;nul&#13;
reg delete 'HKLM\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters' /v SMB1 /F&gt;nul 2&gt;nul&#13;
reg delete 'HKLM\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters' /v SMB2 /F&gt;nul 2&gt;nul&#13;
reg delete 'HKLM\SYSTEM\CurrentControlSet\services\NetBT\Parameters' /v SMBDeviceEnabled /F&gt;nul 2&gt;nul&#13;
sc config netbt start= system&gt;nul 2&gt;nul&#13;
net start netbt&gt;nul 2&gt;nul&#13;
if %bulid%==nt5 (goto sc_sernt5) else (goto sc_sernt6)&#13;
:sc_sernt5&#13;
sc config PlugPlay start= auto&gt;nul 2&gt;nul&#13;
sc config TapiSrv start= auto&gt;nul 2&gt;nul&#13;
sc config Nla start= auto&gt;nul 2&gt;nul&#13;
net start Nla /y&gt;nul 2&gt;nul&#13;
netsh firewall set service type = fileandprint mode = enable scope = subnet&gt;nul 2&gt;nul&#13;
set 'nbt=HKLM\SYSTEM\CurrentControlSet\services\NetBT\Parameters\Interfaces'&#13;
for /f 'tokens=2 delims={' %%a in ('reg query '%nbt%'') do (reg query '%nbt%\TCPIP_{%%a' /s|findstr /i /c:'NetbiosOptions'&gt;nul &amp;&amp; reg add '%nbt%\TCPIP_{%%a' /v NetbiosOptions /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul)&#13;
goto sc_main2_etc&#13;
:sc_sernt6&#13;
sc config DcomLaunch start= auto&gt;nul 2&gt;nul&#13;
sc config RpcEptMapper start= auto&gt;nul 2&gt;nul&#13;
sc config SamSs start= auto&gt;nul 2&gt;nul&#13;
sc config nsi start= auto&gt;nul 2&gt;nul&#13;
sc config SstpSvc start= demand&gt;nul 2&gt;nul&#13;
sc config MpsSvc start= auto&gt;nul 2&gt;nul&#13;
net start MpsSvc /y&gt;nul 2&gt;nul&#13;
sc config NlaSvc start= auto&gt;nul 2&gt;nul&#13;
sc config netprofm start= auto&gt;nul 2&gt;nul&#13;
sc config fdPHost start= auto&gt;nul 2&gt;nul&#13;
net start fdPHost /y&gt;nul 2&gt;nul&#13;
sc config FDResPub start= auto&gt;nul 2&gt;nul&#13;
net start FDResPub /y&gt;nul 2&gt;nul&#13;
sc config HomeGroupListener start= auto&gt;nul 2&gt;nul&#13;
sc config WMPNetworkSvc start= auto&gt;nul 2&gt;nul&#13;
net start WMPNetworkSvc /y&gt;nul 2&gt;nul&#13;
sc config HomeGroupProvider start= auto&gt;nul 2&gt;nul&#13;
net start HomeGroupProvider /y&gt;nul 2&gt;nul&#13;
netsh advfirewall firewall set rule group=\'网络发现\' new enable=Yes&gt;nul 2&gt;nul&#13;
netsh advfirewall firewall set rule group=\'文件和打印机共享\' new enable=Yes&gt;nul 2&gt;nul&#13;
if %bulid%==nt10 powershell -NonInteractive 'Enable-WindowsOptionalFeature -Online -FeatureName SMB1Protocol'&gt;nul 2&gt;nul&#13;
for /f 'delims=' %%a in ('reg query 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters\Interfaces' /s /e /f '0x2'^|findstr '\Tcpip_'') do reg add '%%a' /v NetbiosOptions /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
:sc_main2_etc&#13;
(echo [Unicode]&#13;
echo Unicode=yes&#13;
echo [Version]&#13;
echo signature='$CHICAGO$'&#13;
echo Revision=1&#13;
echo [Privilege Rights]&#13;
echo sedenynetworklogonright = &#13;
echo senetworklogonright = Everyone,Administrators,Users,Power Users,Backup Operators,guest)&gt;&gt;%temp%\zcl.inf&#13;
secedit /configure /db %temp%\zcl.sdb /cfg %temp%\zcl.inf /log %temp%\zcl.log /quiet&#13;
del /q %temp%\zcl.*&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v restrictanonymous /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters' /v AutoShareServer /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\LanmanServer\Parameters' /v AutoShareWks /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Browser\Parameters' /v MaintainServerList /t REG_SZ /d Auto /f&gt;nul 2&gt;nul&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\Browser\Parameters' /v IsDomainMaster /t REG_SZ /d FALSE /f&gt;nul 2&gt;nul&#13;
reg query 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters' /v EnableLMHOSTS|findstr '0x0'&gt;nul 2&gt;nul &amp;&amp; reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters' /v EnableLMHOSTS /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
reg delete 'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\RemoteComputer\NameSpace\{D6277990-4C6A-11CF-8D87-00AA0060F5BF}' /f&gt;nul 2&gt;nul&#13;
net use * /del /y&gt;nul 2&gt;nul&#13;
net config server /hidden:no&gt;nul 2&gt;nul&#13;
net share ipc$&gt;nul 2&gt;nul&#13;
reg delete 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters' /v NodeType /f&gt;nul 2&gt;nul&#13;
reg delete 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\services\NetBT\Parameters' /v DhcpNodeType /f&gt;nul 2&gt;nul&#13;
goto sc_tip&#13;
:sc_gl&#13;
cls&#13;
reg query 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v forceguest|findstr '0x1'&gt;nul 2&gt;nul||goto classic&#13;
reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v forceguest /t REG_DWORD /d 0x0 /f&gt;nul 2&gt;nul&#13;
set jlb=y&#13;
:classic&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo          功能：管理本机共享，修改共享权限&#13;
echo.&#13;
echo              家庭版系统仅支持查看共享&#13;
echo   ----------------------------------------------&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo                    【使用说明】&#13;
echo.&amp;echo.&#13;
echo        点左侧“共享”可查看本机所有共享；&#13;
echo.&#13;
echo        右键点左侧“共享”可“新建共享”；&#13;
echo.&#13;
echo        右键点右侧共享可“停止共享”（能多选）；&#13;
echo.&#13;
echo        右键点右侧共享选“属性”可修改权限；&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
fsmgmt.msc&#13;
if %jlb%==y reg add 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa' /v forceguest /t REG_DWORD /d 0x1 /f&gt;nul 2&gt;nul&#13;
goto sc_top&#13;
:sc_tip&#13;
cls&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo                    修复已完成！！！&#13;
mshta vbscript:msgbox('请手动重启计算机',64,'提示')(window.close) &#13;
exit&#13;
:sc_help&#13;
cls&#13;
start '%ProgramFiles%\Internet Explorer\iexplore.exe' 'https://zhuanlan.zhihu.com/p/24285252'&#13;
goto sc_top&#13;
:sc_print&#13;
cls&#13;
start '%ProgramFiles%\Internet Explorer\iexplore.exe' 'https://zhuanlan.zhihu.com/p/24187152'&#13;
goto sc_top&#13;
:sc_update&#13;
cls&#13;
start '%ProgramFiles%\Internet Explorer\iexplore.exe' 'https://zhuanlan.zhihu.com/p/24178142'&#13;
goto sc_top&#13;
goto :eof&#13;
:sc_qxfix&#13;
cls&#13;
echo.&amp;echo.&amp;echo.&#13;
echo                     【使用说明】&#13;
echo    --------------------------------------------&#13;
echo.&#13;
echo          复制共享文件夹的地址栏路径到下方&#13;
echo.&#13;
echo           如果只共享打印机，按回车键跳过&#13;
echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&amp;echo.&#13;
echo 粘贴路径，按回车:&#13;
echo.&amp;echo.&#13;
set /p lj=&#13;
for %%a in ('%lj%') do set name=%%~na&#13;
net share '%name%'='%lj%'&gt;nul 2&gt;nul&#13;
if %bulid%==nt5 cacls '%lj%' /t /e /p everyone:f &gt;nul 2&gt;nul &amp;&amp; goto :eof&#13;
icacls '%lj%' /grant everyone:(oi)(ci)F&gt;nul 2&gt;nul&#13;
goto :eof&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20-she-zhi-gong-xiang.html</guid><pubDate>Fri, 08 Nov 2024 06:45:48 +0000</pubDate></item><item><title>AHK cmd运行剪贴板或文件</title><link>https://zb9678.github.io/post/AHK%20cmd-yun-xing-jian-tie-ban-huo-wen-jian.html</link><description>^F9   &#13;
ping  www.my69777.com&#13;
my69777.com&#13;
^F10&#13;
cmd/k 选定文字&#13;
^F11&#13;
cmd/k 选定文字  管理员身份   如   ipconfig&#13;
^F12&#13;
cmd/k 选定文件  管理员身份　如   1.bat&#13;
^+F12&#13;
cmd/k 选定文件  普通身份&#13;
&#13;
`^F9::&#13;
    clipboard := ''  ; 清空剪贴板&#13;
    Send, ^c  ; 复制选中的文本到剪贴板&#13;
    ClipWait  ; 等待剪贴板中有数据&#13;
    urls := clipboard  ; 将剪贴板内容存储到变量中&#13;
&#13;
    ; 创建一个临时批处理文件&#13;
    FileDelete, ping_commands.bat  ; 删除旧的文件（如果存在）&#13;
    FileAppend, @echo off`n, ping_commands.bat  ; 创建新的批处理文件并添加开头&#13;
&#13;
    Loop, parse, urls, `n  ; 遍历每一行（网址）&#13;
    {&#13;
        FileAppend, ping %A_LoopField%`n, ping_commands.bat  ; 将每个 ping 命令写入批处理文件&#13;
    }&#13;
&#13;
    Run, cmd.exe /k ping_commands.bat  ; 在一个窗口中运行批处理文件&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F9  ping选定多个网址  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-516&#13;
&#13;
^F10::&#13;
    clipboard = &#13;
    send, ^c&#13;
    clipboard = %clipboard%&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ClipWait  ; 等待剪贴板中有数据&#13;
Run, %A_ComSpec% /k %clipboard%&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F10  cmd/k 选定文字   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-516&#13;
&#13;
^F11::&#13;
    clipboard = &#13;
    send, ^c&#13;
    clipboard = %clipboard%&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ClipWait  ; 等待剪贴板中有数据&#13;
Run, %A_ComSpec% /k %clipboard%, , RunAs&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ ^F11  cmd/k 选定文字 以管理员运行   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-516&#13;
&#13;
^F12::&#13;
    Send, &gt;^x&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ; 获取剪贴板内容（假设剪贴板中存储的是批处理文件的路径）&#13;
    ClipWait  ; 等待剪贴板内容&#13;
    batchFilePath := Clipboard  ; 将剪贴板内容赋值给变量&#13;
&#13;
    ; 确保路径是有效的&#13;
    if FileExist(batchFilePath) {&#13;
        ; 使用 RunAs 命令以管理员身份运行批处理文件&#13;
        Run, % 'cmd.exe /c ''' batchFilePath '''', , RunAs&#13;
    } else {&#13;
        MsgBox, 批处理文件不存在: %batchFilePath%&#13;
    }&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F12  cmd/c 选定文件 管理员运行    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-517&#13;
&#13;
^+F12::&#13;
    Send, &gt;^x      ; 获取批处理文件的路径快捷键&#13;
    Sleep, 100  ; 等待剪切操作完成&#13;
    ; 获取剪贴板内容（假设剪贴板中存储的是批处理文件的路径）&#13;
    ClipWait  ; 等待剪贴板内容&#13;
    batchFilePath := Clipboard  ; 将剪贴板内容赋值给变量&#13;
&#13;
    ; 确保路径是有效的&#13;
    if FileExist(batchFilePath) {&#13;
        ; 非管理员身份　运行批处理文件&#13;
        Run, % 'cmd.exe /c ''' batchFilePath ''''&#13;
    } else {&#13;
        MsgBox, 批处理文件不存在: %batchFilePath%&#13;
    }&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  ^F12  cmd/c 选定文件 管理员运行    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 012-517`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20cmd-yun-xing-jian-tie-ban-huo-wen-jian.html</guid><pubDate>Fri, 08 Nov 2024 06:31:28 +0000</pubDate></item><item><title>ahk 选中 删除空行</title><link>https://zb9678.github.io/post/ahk%20-xuan-zhong-%20-shan-chu-kong-xing.html</link><description>`F6 &amp; 2::&#13;
SetWorkingDir, %A_ScriptDir%  ; 设置工作目录&#13;
&#13;
; 复制内容到剪贴板&#13;
Send, ^c&#13;
ClipWait, 2&#13;
sleep, 200&#13;
if ErrorLevel&#13;
{&#13;
    MsgBox, 复制失败或超时&#13;
    return&#13;
}&#13;
&#13;
; 处理剪贴板内容&#13;
text := Clipboard&#13;
text := StrReplace(text, '`r')  ; 移除所有回车符&#13;
&#13;
; 使用数组存储非空行&#13;
lines := StrSplit(text, '`n')&#13;
output := ''&#13;
&#13;
for index, line in lines&#13;
{&#13;
    if (line != '') {  ; 忽略空行&#13;
        output .= line . '`n'&#13;
    }&#13;
}&#13;
&#13;
; 移除最后一个换行符&#13;
output := RTrim(output, '`n')&#13;
&#13;
; 将结果写回剪贴板&#13;
Clipboard := output&#13;
Send, ^v&#13;
&#13;
return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ F6 &amp; 2  选中 删除空行   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 13-2706`。</description><guid isPermaLink="true">https://zb9678.github.io/post/ahk%20-xuan-zhong-%20-shan-chu-kong-xing.html</guid><pubDate>Thu, 07 Nov 2024 11:54:29 +0000</pubDate></item><item><title>bat wifi</title><link>https://zb9678.github.io/post/bat%20wifi.html</link><description>`@echo off&#13;
&#13;
chcp 437 &gt;nul&#13;
&#13;
for /f 'tokens=1* delims=:' %%i in ('netsh wlan show profiles ^| findstr /c:'All User Profile'') do (&#13;
&#13;
    call :GetPass %%j&#13;
&#13;
)&#13;
&#13;
pause&#13;
&#13;
goto :eof&#13;
&#13;
:GetPass&#13;
&#13;
echo WiFi : %*&#13;
&#13;
for /f 'delims=' %%a in ('netsh wlan show profile name^='%*' key^=clear ^| findstr /c:'Key Content'') do (&#13;
&#13;
    echo %%a&#13;
&#13;
) &gt;  D:\$RECYCLE&#13;
goto :eof  &#13;
`。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20wifi.html</guid><pubDate>Thu, 07 Nov 2024 11:38:26 +0000</pubDate></item><item><title>bat 换成Win10资源管理器 管理员运行</title><link>https://zb9678.github.io/post/bat%20-huan-cheng-Win10-zi-yuan-guan-li-qi-%20-guan-li-yuan-yun-xing.html</link><description>`@echo off&#13;
setlocal enabledelayedexpansion&#13;
&#13;
echo 请选择文件资源管理器样式:&#13;
echo 1. Windows 10 文件资源管理器&#13;
echo 2. Windows 11 文件资源管理器&#13;
set /p choice='输入选项 (1或2): '&#13;
&#13;
if '%choice%'=='1' (&#13;
    echo 正在应用 Windows 10 文件资源管理器样式...&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}' /v '' /t REG_SZ /d 'CLSID_ItemsViewAdapter' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}\InProcServer32' /v '' /t REG_SZ /d 'C:\Windows\System32\Windows.UI.FileExplorer.dll_' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}\InProcServer32' /v 'ThreadingModel' /t REG_SZ /d 'Apartment' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}' /v '' /t REG_SZ /d 'File Explorer Xaml Island View Adapter' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}\InProcServer32' /v '' /t REG_SZ /d 'C:\Windows\System32\Windows.UI.FileExplorer.dll_' /f&#13;
    reg add 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}\InProcServer32' /v 'ThreadingModel' /t REG_SZ /d 'Apartment' /f&#13;
    echo Windows 10 文件资源管理器样式已应用.&#13;
) else if '%choice%'=='2' (&#13;
    echo 正在应用 Windows 11 文件资源管理器样式...&#13;
    reg delete 'HKEY_CURRENT_USER\Software\Classes\CLSID\{2aa9162e-c906-4dd9-ad0b-3d24a8eef5a0}' /f&#13;
    reg delete 'HKEY_CURRENT_USER\Software\Classes\CLSID\{6480100b-5a83-4d1e-9f69-8ae5a88e9a33}' /f&#13;
    echo Windows 11 文件资源管理器样式已复原.&#13;
) else (&#13;
    echo 无效的选项，请选择 1 或 2.&#13;
    exit /b&#13;
)&#13;
&#13;
set /p restart='是否重启资源管理器以使更改生效？(y/n): '&#13;
if /i '%restart%'=='y' (&#13;
    echo 正在重启资源管理器...&#13;
    taskkill /f /im explorer.exe&#13;
    start explorer.exe&#13;
    echo 资源管理器已重启.&#13;
) else (&#13;
    echo 请手动重启资源管理器以使更改生效.&#13;
)&#13;
&#13;
endlocal&#13;
pause&#13;
`。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20-huan-cheng-Win10-zi-yuan-guan-li-qi-%20-guan-li-yuan-yun-xing.html</guid><pubDate>Thu, 07 Nov 2024 11:34:51 +0000</pubDate></item><item><title>bat  选择一个选项 (1-4)</title><link>https://zb9678.github.io/post/bat%20%20-xuan-ze-yi-ge-xuan-xiang-%20%281-4%29.html</link><description>`@echo off&#13;
:menu&#13;
cls&#13;
echo ===========================================&#13;
echo        Recall 功能管理脚本&#13;
echo ===========================================&#13;
echo.&#13;
echo 1. 查看 Recall 功能状态&#13;
echo 2. 禁用 Recall 功能&#13;
echo 3. 启用 Recall 功能&#13;
echo 4. 退出&#13;
echo.&#13;
set /p choice='请选择一个选项 (1-4): '&#13;
:menu&#13;
cls&#13;
echo ===========================================&#13;
echo        Recall 功能管理脚本&#13;
echo ===========================================&#13;
echo.&#13;
echo 1. 查看 Recall 功能状态&#13;
echo 2. 禁用 Recall 功能&#13;
echo 3. 启用 Recall 功能&#13;
echo 4. 退出&#13;
echo.&#13;
set /p choice='请选择一个选项 (1-4): '&#13;
&#13;
if '%choice%'=='1' goto check&#13;
if '%choice%'=='2' goto disable&#13;
if '%choice%'=='3' goto enable&#13;
if '%choice%'=='4' goto exit&#13;
&#13;
echo 无效的选择。</description><guid isPermaLink="true">https://zb9678.github.io/post/bat%20%20-xuan-ze-yi-ge-xuan-xiang-%20%281-4%29.html</guid><pubDate>Thu, 07 Nov 2024 11:32:53 +0000</pubDate></item><item><title>AHK 开头Umi-OCR</title><link>https://zb9678.github.io/post/AHK%20-kai-tou-Umi-OCR.html</link><description>`#SingleInstance force&#13;
isRunning := false                                                ;---- 用于跟踪脚本是否在运行&#13;
timerRunning := false                                          ;-- 用于跟踪定时器是否在运行&#13;
&#13;
F5 &amp; b::                                             &#13;
    	Process, Exist, Umi-OCR.exe                   ; --------检查程序是否在运行&#13;
    	if (ErrorLevel) &#13;
{&#13;
        	Process, Close, Umi-OCR.exe                 ;---- 如果程序在运行则关闭它&#13;
        	isRunning := false                                  ;----------- 更新状态为未运行&#13;
        	SetTimer, AutoCloseUmi-OCR, Off        ;------------------ 关闭定时器&#13;
        	timerRunning := false                            ;------------- 更新定时器状态&#13;
}&#13;
else &#13;
{&#13;
        	Run, 'D:\ahk1.0\Lib\0 tool\Umi-OCR_Rapid_dev_20231025\Umi-OCR.exe'&#13;
        	Sleep, 1700&#13;
        	Send, +^!z                                             ;-------------截图快捷键 +^!z  &#13;
       	isRunning := true                                   ;--------  更新状态为正在运行&#13;
&#13;
        	if (!timerRunning)                                   ;----------- 如果定时器未运行&#13;
       {                                          &#13;
            	SetTimer, AutoCloseUmi-OCR, -11000  ; --------------------------设置一个11秒的单次定时器&#13;
            	timerRunning := true                             ;---- 更新定时器状态为运行中&#13;
       }&#13;
}&#13;
return&#13;
;----------------------------------------------------------------------------定时器&#13;
AutoCloseUmi-OCR:&#13;
    	Process, Close, Umi-OCR.exe                ;------------自动关闭截图软件&#13;
    	isRunning := false                                  ;----------- 更新状态为未运行&#13;
    	timerRunning := false                            ;---- 更新定时器状态为未运行&#13;
	return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  F5 &amp; b  Umi-OCR.exe  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 005`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-kai-tou-Umi-OCR.html</guid><pubDate>Sun, 03 Nov 2024 05:52:23 +0000</pubDate></item><item><title>AHK 777</title><link>https://zb9678.github.io/post/AHK%20777.html</link><description>`&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ&#13;
	; 指定 SoundVolumeView 的路径&#13;
global SoundVolumeViewPath, devices, currentIndex, command&#13;
SoundVolumeViewPath := 'D:\ahk1.0\Lib\soundvolumeview-x64\SoundVolumeView.exe'&#13;
	; 定义设备名称（确保这些设备名称与 SoundVolumeView 中显示的名称完全匹配）&#13;
	devices := ['耳机', '扬声器', '手机']&#13;
	currentIndex := 0  ; 当前设备的索引&#13;
appskey &amp; F1::&#13;
currentIndex := (currentIndex + 1) &gt; devices.MaxIndex() ? 1 : currentIndex + 1  ; 循环切换  &#13;
    	; 拼接命令&#13;
command := SoundVolumeViewPath . ' /SetDefault ''' . devices[currentIndex] . ''' ''Render'''&#13;
    &#13;
    	; 调试：显示生成的命令，检查是否正确&#13;
{&#13;
    	loop, 1&#13;
        	SoundBeep, 400, 10&#13;
; 400 声音频率, 可以为表达式. 它是介于 37-32767 之间的数字. 省略则频率为523&#13;
; -------------------10 声音的持续时间, 单位为毫秒. 如果省略, 则持续时间为 150      &#13;
        	; 显示当前设备名称&#13;
        	Text := '⭕    ' . devices[currentIndex] . '   ⭕'&#13;
        	btt(Text, 600, 10, ,'Style7')&#13;
        	sleep, 500&#13;
        	btt()&#13;
}    &#13;
    	Run, %command%                              ; ----------------------执行命令&#13;
    	return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ     切换音频设备     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 1-28&#13;
&#13;
OnClipboardChange:&#13;
{&#13;
	SoundBeep, 10000, 1	&#13;
	btt(Clipboard,,,,'Style8')&#13;
	sleep, 700&#13;
	btt()​&#13;
;FileAppend, %clipboard% `n, c:\6           ;----------------  剪贴板历史记录保存&#13;
	return&#13;
}&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ     复制后通知     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 02-68&#13;
&#13;
&#13;
&#13;
~LButton &amp; RButton::&#13;
	cos_mousedrag_treshold := 2 ; pixels&#13;
MouseGetPos, cos_mousedrag_x, cos_mousedrag_y&#13;
	win1 := WinActive('A')&#13;
	KeyWait RButton&#13;
MouseGetPos, cos_mousedrag_x2, cos_mousedrag_y2&#13;
	win2 := WinActive('A')&#13;
	WinGetClass cos_class, A&#13;
if(((abs(cos_mousedrag_x2 - cos_mousedrag_x) &gt; cos_mousedrag_treshold&#13;
  or abs(cos_mousedrag_y2 - cos_mousedrag_y) &gt; cos_mousedrag_treshold)) and win1 = win2&#13;
and cos_class != 'ConsoleWindowClass')&#13;
	KeyWait, RButton , T1.1&#13;
	If ErrorLevel = 0&#13;
{&#13;
	SendInput {Ctrl Down}c{Ctrl Up}&#13;
	ClipWait, , 1   &#13;
; 等待，一直到剪贴板包含数据。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20777.html</guid><pubDate>Sun, 03 Nov 2024 05:08:22 +0000</pubDate></item><item><title>AHK ahk1.11 -2</title><link>https://zb9678.github.io/post/AHK%20ahk1.11%20-2.html</link><description>`&#13;
;🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁  颜色  处理  🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁🎁&#13;
;👔👔👔👔👔👔👔👔👔👔👔  段落  处理  👔👔👔👔👔👔👔👔👔👔👔&#13;
&#13;
#F2::&#13;
if (onoff := !onoff)&#13;
	{&#13;
	Send {home}&#13;
	}&#13;
else&#13;
	{&#13;
    	Send {end}&#13;
keywait, F2&#13;
}&#13;
 Return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ   #F2 行首 行尾    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 09-2625&#13;
&#13;
#F3::&#13;
if (onoff := !onoff)&#13;
	{&#13;
	Send #!{home}&#13;
	}&#13;
else&#13;
	{&#13;
    	Send #!{end}&#13;
keywait, F3&#13;
}&#13;
 Return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  #F3 段首 段尾     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 10 -2638&#13;
&#13;
#F4::&#13;
if (onoff := !onoff)&#13;
	{&#13;
send, ^a{left}&#13;
	}&#13;
else&#13;
	{&#13;
send, ^a{right}&#13;
	keywait, F4&#13;
	}&#13;
 Return&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ   #F4 页首 页尾    ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 11-2651&#13;
&#13;
&#13;
;👔👔👔👔👔👔👔👔👔👔👔  段落  处理  👔👔👔👔👔👔👔👔👔👔👔&#13;
;🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀  空行  处理  🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀🎀&#13;
&#13;
F6 &amp; 1::&#13;
    Clipboard := ''&#13;
    Send, ^c&#13;
    ClipWait, 2&#13;
    Clipboard := RegExReplace(Clipboard, '(\R\s*){2,}', '`r`n`r`n')&#13;
    Send, ^v&#13;
return&#13;
; 当我们使用 '`r`n' 时，它只会将光标移动到下一行的开始，但不会创建一个空行。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20ahk1.11%20-2.html</guid><pubDate>Sun, 03 Nov 2024 05:07:01 +0000</pubDate></item><item><title>AHK ahk1.11  -1</title><link>https://zb9678.github.io/post/AHK%20ahk1.11%20%20-1.html</link><description>`&#13;
;ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ&#13;
&#13;
#Requires AutoHotkey v1.1.36                             ; -----------------------------------V1版本&#13;
Menu, Tray, Icon, D:\ahk1.0\Lib\0\Library.ico       ;--------------------------------- 脚本图标&#13;
Menu , tray , tip , Ahk1.1                                       ;---------------------------- 鼠标悬浮提示&#13;
#NoEnv                                                                 ;--------------------------------- 改善性能&#13;
#SingleInstance Force        　                               ;------只允许单个该脚本运行,脚本强制替换&#13;
SendMode Input             ;-------Send,SendRaw,Click,MouseMove/Click/Drag到SendInput&#13;
#WinActivateForce                                               ;-------------------- 用强制的方法激活窗口&#13;
#Persistent                      ;----------- 使非热键类的脚本持久运行 直到用户关闭或遇到 ExitApp&#13;
#ClipboardTimeout -1                         ;首次访问剪贴板失败后脚本继续访问剪贴板的持续时间&#13;
                                        ; -1 表示持续访问剪贴板. 0 只访问1次. 无 使用 1000 ms 的超时时间&#13;
SetWorkingDir, %A_ScriptDir%                            ;----------- 脚本所在的文件夹作为工作目录&#13;
SetTitleMatchMode fast&#13;
SetBatchLines, -1                                               ; 脚本快速执行,减少 CPU 占用,  使用10ms -1&#13;
Process,priority, , high                                         ;------------------------脚本进程优先级为高&#13;
;#HotkeyModifierTimeout 0  ;影响热键修饰符的行为：^!#+。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20ahk1.11%20%20-1.html</guid><pubDate>Sun, 03 Nov 2024 05:06:09 +0000</pubDate></item><item><title>AHK "耳机", "扬声器", "手机"</title><link>https://zb9678.github.io/post/AHK%20--er-ji--%2C%20--yang-sheng-qi--%2C%20--shou-ji--.html</link><description>`	; 指定 SoundVolumeView 的路径&#13;
global SoundVolumeViewPath, devices, currentIndex, command&#13;
SoundVolumeViewPath := 'D:\ahk1.0\Lib\soundvolumeview-x64\SoundVolumeView.exe'&#13;
	; 定义设备名称（确保这些设备名称与 SoundVolumeView 中显示的名称完全匹配）&#13;
	devices := ['耳机', '扬声器', '手机']&#13;
	currentIndex := 0  ; 当前设备的索引&#13;
appskey &amp; F1::&#13;
currentIndex := (currentIndex + 1) &gt; devices.MaxIndex() ? 1 : currentIndex + 1  ; 循环切换  &#13;
    	; 拼接命令&#13;
command := SoundVolumeViewPath . ' /SetDefault ''' . devices[currentIndex] . ''' ''Render'''&#13;
    &#13;
    	; 调试：显示生成的命令，检查是否正确&#13;
{&#13;
    	loop, 1&#13;
        	SoundBeep, 400, 10&#13;
; 400 声音频率, 可以为表达式. 它是介于 37-32767 之间的数字. 省略则频率为523&#13;
; -------------------10 声音的持续时间, 单位为毫秒. 如果省略, 则持续时间为 150      &#13;
        	; 显示当前设备名称&#13;
        	Text := '⭕    ' . devices[currentIndex] . '   ⭕'&#13;
        	btt(Text, 600, 10, ,'Style7')&#13;
        	sleep, 500&#13;
        	btt()&#13;
}    &#13;
    	Run, %command%                              ; ----------------------执行命令&#13;
    	return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ     切换音频设备     ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 1`&#13;
&#13;
# sound_volume_view　下载地址&#13;
https://www.nirsoft.net/utils/sound_volume_view.html&#13;
# realtek 下载地址&#13;
https://www.realtek.com/Download/Overview?menu_id=355。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20--er-ji--%2C%20--yang-sheng-qi--%2C%20--shou-ji--.html</guid><pubDate>Sun, 03 Nov 2024 04:00:40 +0000</pubDate></item><item><title>AHK 单键启动关闭 ahk</title><link>https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-%20ahk.html</link><description>`#SingleInstance force                                          ;----------- 强制加载新的脚本&#13;
isRunning := false                  ; 状态变量: isRunning 用于跟踪脚本是否正在运行&#13;
&#13;
$^esc::                  ; $+esc::&#13;
    	if (isRunning) &#13;
	{&#13;
      					 ; 1.如果脚本已经在运行，则关闭它&#13;
        	Name := 'SnoMouse.ahk'                     ;------ 指定要退出的脚本名称&#13;
        	DetectHiddenWindows, On                   ;------ 启用对隐藏窗口的检测&#13;
       	SetTitleMatchMode, 2 ; 设置标题匹配模式&#13;
&#13;
       	WinClose, %Name% ahk_class AutoHotkey&#13;
        isRunning := false 			                        ;-----------更新状态为未运行&#13;
    	} &#13;
&#13;
      else {&#13;
       					 ; 2.如果脚本没有在运行，则启动它&#13;
        	Run D:\ahk1.0\Lib\SnoMouse.ahk&#13;
        isRunning := true                                         ;---------更新状态为正在运行&#13;
   	 }&#13;
return`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-%20ahk.html</guid><pubDate>Sun, 03 Nov 2024 03:55:43 +0000</pubDate></item><item><title>AHK 单键启动关闭程序</title><link>https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-cheng-xu.html</link><description>`#SingleInstance force                                                          ; 强制加载新的脚本&#13;
isRunning := false                  ; 状态变量: isRunning 用于跟踪脚本是否正在运行&#13;
Rctrl &amp; 5::&#13;
    Process, Exist, v2rayN.exe                                      ; 检查程序是否已经在运行&#13;
    if (ErrorLevel)                 ;根据 ErrorLevel 的值来决定是关闭程序还是启动程序&#13;
    {&#13;
                                                                            ; 如果程序正在运行，则关闭它&#13;
        Process, Close, v2rayN.exe&#13;
        isRunning := false                                                        ; 更新状态为未运行&#13;
    } &#13;
    else &#13;
    {&#13;
                                                                        ; 如果程序没有在运行，则启动它&#13;
        Run, C:\3\v2rayN-With-Core\v2rayN.exe , , min &#13;
        isRunning := true                                                     ; 更新状态为正在运行&#13;
    }&#13;
return&#13;
&#13;
;Rctrl &amp; 5::&#13;
if (u := !u)&#13;
	{&#13;
	Process,close,v2rayN.exe&#13;
	}&#13;
else&#13;
	{&#13;
    	Run, C:\3\v2rayN-With-Core\v2rayN.exe , , min &#13;
keywait, 5&#13;
}&#13;
Return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ    Rctrl &amp; 5 打开 v2rayN   ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 00007`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-dan-jian-qi-dong-guan-bi-cheng-xu.html</guid><pubDate>Sun, 03 Nov 2024 03:52:54 +0000</pubDate></item><item><title>AHK 确认对话框</title><link>https://zb9678.github.io/post/AHK%20-que-ren-dui-hua-kuang.html</link><description>`DetectHiddenWindows, On                                 ;------ 启用对隐藏窗口的检测&#13;
SetTitleMatchMode, 2                                           ;----------- 设置标题匹配模式&#13;
&#13;
F9 &amp; [::&#13;
	Run, 'D:\ahk1.0\Lib\SnoMouse.ahk'&#13;
     Loop&#13;
{&#13;
	Sleep, 120000 ; 等待120秒&#13;
                                                                             ;----------------------------- 显示确认对话框&#13;
	MsgBox, 4,, 关闭 SnoMouse.ahk 请点是&#13;
    IfMsgBox, Yes&#13;
	{&#13;
       	WinClose, SnoMouse.ahk ahk_class AutoHotkey&#13;
	}&#13;
	break ; 退出循环                                      ;-- 如果选择“否”，则继续循环&#13;
}&#13;
	return&#13;
;-----------------------------------------------------------------------------------&#13;
F9 &amp; ]::&#13;
       	WinClose, SnoMouse.ahk ahk_class AutoHotkey&#13;
return&#13;
; ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ  F1 &amp; [ 启动 F1 &amp; ] 退出 SnoMouse  ΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞΞ 00009`。</description><guid isPermaLink="true">https://zb9678.github.io/post/AHK%20-que-ren-dui-hua-kuang.html</guid><pubDate>Sun, 03 Nov 2024 03:50:58 +0000</pubDate></item><item><title>Vscode 自动保存设置</title><link>https://zb9678.github.io/post/Vscode%20-zi-dong-bao-cun-she-zhi.html</link><description>&lt;p align='center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241101233120.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/Vscode%20-zi-dong-bao-cun-she-zhi.html</guid><pubDate>Fri, 01 Nov 2024 15:32:03 +0000</pubDate></item><item><title>Vscode 资源管理器上图标　插件</title><link>https://zb9678.github.io/post/Vscode%20-zi-yuan-guan-li-qi-shang-tu-biao-%E3%80%80-cha-jian.html</link><description>&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zcr07/img/refs/heads/main/images/L11.01_23_17_29.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/Vscode%20-zi-yuan-guan-li-qi-shang-tu-biao-%E3%80%80-cha-jian.html</guid><pubDate>Fri, 01 Nov 2024 15:18:34 +0000</pubDate></item><item><title>Vscode 界面字体大小设置</title><link>https://zb9678.github.io/post/Vscode%20-jie-mian-zi-ti-da-xiao-she-zhi.html</link><description>&lt;p align='center'&gt;&lt;img src='https://raw.githubusercontent.com/zcr07/img/refs/heads/main/images/L11.01_23_06_46.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/Vscode%20-jie-mian-zi-ti-da-xiao-she-zhi.html</guid><pubDate>Fri, 01 Nov 2024 15:07:14 +0000</pubDate></item><item><title>html  body与head</title><link>https://zb9678.github.io/post/html%20%20body-yu-head.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://cdn.jsdelivr.net/gh/zcr07/img@main/images/20241101223551.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20%20body-yu-head.html</guid><pubDate>Fri, 01 Nov 2024 14:36:46 +0000</pubDate></item><item><title>html  marquee</title><link>https://zb9678.github.io/post/html%20%20marquee.html</link><description>`&lt;marquee&gt;该文本将从右向左滚动&lt;/marquee&gt;`&#13;
-----------------------------------------------------------------------&#13;
`&lt;marquee direction='up'&gt;该文本将从下往上滚动&lt;/marquee&gt;`&#13;
-----------------------------------------------------------------------&#13;
`&lt;marquee&#13;
  direction='down'&#13;
  width='250'&#13;
  height='200'&#13;
  behavior='alternate'&#13;
  style='border:solid'&gt;&#13;
  &lt;marquee behavior='alternate'&gt;该文本将弹跳&lt;/marquee&gt;`&#13;
-----------------------------------------------------------------------&#13;
    `&lt;marquee loop='100' bgcolor='red'&gt;&#13;
        文字能跑了。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20%20marquee.html</guid><pubDate>Wed, 30 Oct 2024 15:01:08 +0000</pubDate></item><item><title>html  input 输入标签</title><link>https://zb9678.github.io/post/html%20%20input%20-shu-ru-biao-qian.html</link><description># &lt;input&gt;   单标签（只有小数几个），大多还是起始标签&#13;
&#13;
&#13;
&lt;p align = 'center'&gt;&lt;img src='https://zcr07.github.io/picx-images-hosting/1/image.6t74ii2zcy.jpg' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
# 输入密码的标签&#13;
&#13;
&lt;p align = 'center'&gt;&lt;img src='https://picx.w07.us.kg/1/image.7sn7voa2zp.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
# 禁用标签&#13;
&#13;
&lt;p align = 'center'&gt;&lt;img src='https://picx.w07.us.kg/1/image.pfcg25eiw.jpg' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
&#13;
&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20%20input%20-shu-ru-biao-qian.html</guid><pubDate>Wed, 30 Oct 2024 14:45:56 +0000</pubDate></item><item><title>html 首字变大</title><link>https://zb9678.github.io/post/html%20-shou-zi-bian-da.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.2a53dw946q.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20-shou-zi-bian-da.html</guid><pubDate>Tue, 29 Oct 2024 12:10:47 +0000</pubDate></item><item><title>html 文字绕图 图片部分</title><link>https://zb9678.github.io/post/html%20-wen-zi-rao-tu-%20-tu-pian-bu-fen.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.m2udjv5n.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
# 将图片设置为浮动，文字就包住图片了&#13;
&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.1lbttupvbp.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
# 图片与文字间距&#13;
&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.2a53dvmdro.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20-wen-zi-rao-tu-%20-tu-pian-bu-fen.html</guid><pubDate>Tue, 29 Oct 2024 11:39:46 +0000</pubDate></item><item><title>html 图片位置</title><link>https://zb9678.github.io/post/html%20-tu-pian-wei-zhi.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/2024-10-29_190344.2obj4pcmth.jpg' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;&#13;
。</description><guid isPermaLink="true">https://zb9678.github.io/post/html%20-tu-pian-wei-zhi.html</guid><pubDate>Tue, 29 Oct 2024 11:08:58 +0000</pubDate></item><item><title>FastStone Capture 边缘撕裂去白边</title><link>https://zb9678.github.io/post/FastStone%20Capture%20-bian-yuan-si-lie-qu-bai-bian.html</link><description>&lt;p align = 'center'&gt;&lt;img src='https://github.com/zb9678/picx-images-hosting/raw/master/image.73ty9y72js.png' style='width:400px;'&gt;&lt;br&gt;&lt;br&gt;。</description><guid isPermaLink="true">https://zb9678.github.io/post/FastStone%20Capture%20-bian-yuan-si-lie-qu-bai-bian.html</guid><pubDate>Tue, 29 Oct 2024 10:57:28 +0000</pubDate></item><item><title>Html 生成虚拟文字的方法</title><link>https://zb9678.github.io/post/Html%20-sheng-cheng-xu-ni-wen-zi-de-fang-fa.html</link><description># Lorem26&#13;
- 生成26个单词。</description><guid isPermaLink="true">https://zb9678.github.io/post/Html%20-sheng-cheng-xu-ni-wen-zi-de-fang-fa.html</guid><pubDate>Tue, 29 Oct 2024 10:02:32 +0000</pubDate></item><item><title>cron</title><link>https://zb9678.github.io/post/cron.html</link><description>＃　六段式&#13;
&#13;
cron = *  *  *  *  *  *&#13;
         {秒} {分} {时} {日期} {月} {星期} &#13;
           0      0    12       ?     *    WED         在每星期三下午12:00:00 执行&#13;
注意：&#13;
如果我们指定每月2号执行操作，那么每月2号是星期几是不确定的，因此星期字段不能为 * ，* 表示所有的值，所以要用 ？  &#13;
问号的形式可不适用于五段式。</description><guid isPermaLink="true">https://zb9678.github.io/post/cron.html</guid><pubDate>Sat, 26 Oct 2024 01:15:59 +0000</pubDate></item><item><title>构建的过程</title><link>https://zb9678.github.io/post/gou-jian-de-guo-cheng.html</link><description>https://github.com/Meekdai/Gmeek?tab=readme-ov-file&#13;
安装【创建仓库】点击[通过模板创建仓库](https://github.com/new?template_name=Gmeek-template&amp;template_owner=Meekdai)&#13;
&#13;
写文章&#13;
issues　　　右侧 `Labels` 选 `documentation`   (这个很重要)。</description><guid isPermaLink="true">https://zb9678.github.io/post/gou-jian-de-guo-cheng.html</guid><pubDate>Fri, 25 Oct 2024 10:39:46 +0000</pubDate></item></channel></rss>